{"version":3,"file":"static/js/348.f3dd7e4c.chunk.js","mappings":"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","sources":["components/ImageLoader.js","components/DuckModal.js","components/HouseModal.js","components/UserModal.js","components/ItemList.js","components/QuickPhotoUpload.js","pages/AdminPanel.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Skeleton from '@mui/material/Skeleton';\n\nconst ImageLoader = ({ src, alt,variant, className, width, height }) => {\n  const [loading, setLoading] = useState(true);\n\n  return (\n    <div className=\"image-container\" style={{ position: 'relative', width, height }}>\n      {loading && (\n        <Skeleton\n          variant={variant}\n          width={width}\n          height={height}\n          style={{ position: 'absolute', top: 0, left: 0 }}\n        />\n      )}\n      <img\n        src={src}\n        alt={alt}\n        className={className}\n        onLoad={() => setLoading(false)}\n        style={{ display: loading ? 'none' : 'block', borderRadius: variant === 'circular' ? '50%' : '', width, height }}\n      />\n    </div>\n  );\n};\n\nexport default ImageLoader;\n","import React from \"react\";\nimport {\n  Modal,\n  Box,\n  Typography,\n  IconButton,\n  FormControl,\n  TextField,\n  InputLabel,\n  Select,\n  MenuItem,\n  Button,\n} from \"@mui/material\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport ImageLoader from \"./ImageLoader\";\nimport { format } from \"date-fns\"; // Use date-fns for formatting the date\n\nconst DuckModal = ({\n  open,\n  handleClose,\n  isEditing,\n  currentDuck,\n  houses,\n  users,\n  handleInputChange,\n  handlePhotoChange,\n  handleSubmit,\n  handleDelete,\n  submitting,\n  apiBaseUrl,\n}) => {\n  // Format the foundDate if it exists\n  const formattedFoundDate = currentDuck.foundDate\n    ? format(new Date(currentDuck.foundDate), \"yyyy-MM-dd'T'HH:mm\") // Proper format for datetime-local input\n    : \"\";\n\n  return (\n    <Modal\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"modal-title\"\n      aria-describedby=\"modal-description\"\n      sx={{\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        marginX: 6,\n        overflowY: \"auto\",\n      }}\n    >\n      <Box\n        sx={{\n          bgcolor: \"background.paper\",\n          p: 4,\n          borderRadius: 1,\n          boxShadow: 24,\n          maxWidth: \"90vw\",\n          maxHeight: \"90vh\",\n          overflowY: \"auto\",\n          position: \"relative\",\n        }}\n      >\n        <Typography id=\"modal-title\" variant=\"h6\" component=\"h2\" gutterBottom>\n          {isEditing ? \"Edit Duck\" : \"Add New Duck\"}\n          <IconButton\n            aria-label=\"close\"\n            onClick={handleClose}\n            sx={{ position: \"absolute\", right: 8, top: 8 }}\n          >\n            <CloseIcon />\n          </IconButton>\n        </Typography>\n        <Box component=\"form\" onSubmit={handleSubmit}>\n          <FormControl fullWidth margin=\"normal\">\n            <TextField\n              label=\"Numero\"\n              type=\"number\"\n              id=\"duckNumber\"\n              name=\"id\"\n              value={currentDuck.id}\n              onChange={handleInputChange}\n              disabled={isEditing}\n              required\n            />\n          </FormControl>\n          <FormControl fullWidth margin=\"normal\">\n            <InputLabel id=\"duckType-label\">Tipo</InputLabel>\n            <Select\n              labelId=\"duckType-label\"\n              id=\"duckType\"\n              name=\"type\"\n              value={currentDuck.type}\n              onChange={handleInputChange}\n              required\n            >\n              <MenuItem value=\"normal\">Normal</MenuItem>\n              <MenuItem value=\"oclinhos\">Oclinhos</MenuItem>\n            </Select>\n          </FormControl>\n          <FormControl fullWidth margin=\"normal\">\n            <InputLabel id=\"duckHouse-label\">Casa</InputLabel>\n            <Select\n              labelId=\"duckHouse-label\"\n              id=\"duckHouse\"\n              name=\"houseId\"\n              value={currentDuck.houseId}\n              onChange={handleInputChange}\n              required\n            >\n              {houses.map((house) => (\n                <MenuItem key={house._id} value={house._id}>\n                  {house.name}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n          <FormControl fullWidth margin=\"normal\">\n            <InputLabel id=\"duckUser-label\">User</InputLabel>\n            <Select\n              labelId=\"duckUser-label\"\n              id=\"duckUser\"\n              name=\"userId\"\n              value={currentDuck.userId}\n              onChange={handleInputChange}\n              required\n            >\n              {users.map((user) => (\n                <MenuItem key={user._id} value={user._id}>\n                  {user.username}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n          {currentDuck.found && (\n            <FormControl fullWidth margin=\"normal\">\n              <TextField\n                label=\"Data Encontrado\"\n                type=\"datetime-local\"\n                id=\"foundDate\"\n                name=\"foundDate\"\n                value={formattedFoundDate}\n                onChange={handleInputChange} // Allow changes to the date and time\n                InputLabelProps={{\n                  shrink: true, // Keep the label floating even when the input is filled\n                }}\n              />\n            </FormControl>\n          )}\n          <FormControl fullWidth margin=\"normal\">\n            <Button variant=\"contained\" component=\"label\">\n              Upload Photo\n              <input\n                type=\"file\"\n                hidden\n                id=\"duckPhoto\"\n                name=\"photo\"\n                accept=\"image/*\"\n                onChange={handlePhotoChange}\n              />\n            </Button>\n            {currentDuck.photo && (\n              <Box mt={2} sx={{ textAlign: \"center\" }}>\n                {currentDuck.photo instanceof File ? (\n                  <ImageLoader\n                    src={URL.createObjectURL(currentDuck.photo)}\n                    alt=\"Duck Preview\"\n                    variant=\"retangular\"\n                    className=\"duck-image-preview\"\n                    height=\"200px\"\n                  />\n                ) : (\n                  <ImageLoader\n                    src={`${apiBaseUrl}/${currentDuck.photo.replace(\n                      /\\\\/g,\n                      \"/\"\n                    )}`}\n                    variant=\"retangular\"\n                    alt=\"Duck Preview\"\n                    className=\"duck-image-preview\"\n                    height=\"200px\"\n                  />\n                )}\n              </Box>\n            )}\n          </FormControl>\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"success\"\n            fullWidth\n            sx={{ mt: 3 }}\n            disabled={submitting}\n          >\n            {submitting ? \"Saving...\" : isEditing ? \"Update Duck\" : \"Add Duck\"}\n          </Button>\n\n          {isEditing && (\n            <Button\n              variant=\"contained\"\n              color=\"error\"\n              fullWidth\n              sx={{ mt: 2 }}\n              onClick={handleDelete}\n            >\n              Delete Duck\n            </Button>\n          )}\n        </Box>\n      </Box>\n    </Modal>\n  );\n};\n\nexport default DuckModal;\n","import React from \"react\";\nimport {\n  Modal,\n  Box,\n  Typography,\n  IconButton,\n  FormControl,\n  TextField,\n  Button,\n} from \"@mui/material\";\nimport CloseIcon from \"@mui/icons-material/Close\";\n\nconst HouseModal = ({\n  open,\n  handleClose,\n  isEditing,\n  currentHouse,\n  handleInputChange,\n  handleSubmit,\n  handleDelete,\n  submitting,\n}) => {\n  return (\n    <Modal\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"modal-title\"\n      aria-describedby=\"modal-description\"\n      sx={{\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        marginX: 6,\n        overflowY: \"auto\",\n      }}\n    >\n      <Box\n        sx={{\n          bgcolor: \"background.paper\",\n          p: 4,\n          borderRadius: 1,\n          boxShadow: 24,\n          maxWidth: \"90vw\",\n          maxHeight: \"90vh\",\n          overflowY: \"auto\",\n          position: \"relative\",\n        }}\n      >\n        <Typography\n          id=\"modal-title\"\n          variant=\"h6\"\n          component=\"h2\"\n          gutterBottom\n        >\n          {isEditing ? \"Edit House\" : \"Add New House\"}\n          <IconButton\n            aria-label=\"close\"\n            onClick={handleClose}\n            sx={{ position: \"absolute\", right: 8, top: 8 }}\n          >\n            <CloseIcon />\n          </IconButton>\n        </Typography>\n        <Box component=\"form\" onSubmit={handleSubmit}>\n          <FormControl fullWidth margin=\"normal\">\n            <TextField\n              label=\"Name\"\n              type=\"text\"\n              id=\"houseName\"\n              name=\"name\"\n              value={currentHouse.name}\n              onChange={handleInputChange}\n              required\n            />\n          </FormControl>\n          <FormControl fullWidth margin=\"normal\">\n            <TextField\n              label=\"Address\"\n              type=\"text\"\n              id=\"houseAddress\"\n              name=\"address\"\n              value={currentHouse.address}\n              onChange={handleInputChange}\n            />\n          </FormControl>\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"success\"\n            fullWidth\n            sx={{ mt: 3 }}\n            disabled={submitting}\n          >\n            {submitting\n              ? \"Saving...\"\n              : isEditing\n              ? \"Update House\"\n              : \"Add House\"}\n          </Button>\n\n          {isEditing && (\n            <Button\n              variant=\"contained\"\n              color=\"error\"\n              fullWidth\n              sx={{ mt: 2 }}\n              onClick={handleDelete}\n            >\n              Delete House\n            </Button>\n          )}\n        </Box>\n      </Box>\n    </Modal>\n  );\n};\n\nexport default HouseModal;\n","import React from \"react\";\nimport {\n  Modal,\n  Box,\n  Typography,\n  IconButton,\n  FormControl,\n  TextField,\n  Button,\n  Select,\n  MenuItem,\n  InputLabel,\n} from \"@mui/material\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport ImageLoader from \"./ImageLoader\";\n\nconst UserModal = ({\n  open,\n  onClose,\n  isEditing,\n  currentUser,\n  houses,\n  onInputChange,\n  handlePhotoChange,\n  onSubmit,\n  onDelete,\n  submitting,\n  apiBaseUrl\n}) => {\n  return (\n    <Modal\n      open={open}\n      onClose={onClose}\n      aria-labelledby=\"modal-title\"\n      aria-describedby=\"modal-description\"\n      sx={{\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        marginX: 6,\n        overflowY: \"auto\",\n      }}\n    >\n      <Box\n        sx={{\n          bgcolor: \"background.paper\",\n          p: 4,\n          borderRadius: 1,\n          boxShadow: 24,\n          maxWidth: \"90vw\",\n          maxHeight: \"90vh\",\n          overflowY: \"auto\",\n          position: \"relative\",\n        }}\n      >\n        <Typography\n          id=\"modal-title\"\n          variant=\"h6\"\n          component=\"h2\"\n          gutterBottom\n        >\n          {isEditing ? \"Edit User\" : \"Add New User\"}\n          <IconButton\n            aria-label=\"close\"\n            onClick={onClose}\n            sx={{ position: \"absolute\", right: 8, top: 8 }}\n          >\n            <CloseIcon />\n          </IconButton>\n        </Typography>\n        <Box component=\"form\" onSubmit={onSubmit}>\n          <FormControl fullWidth margin=\"normal\">\n            <TextField\n              label=\"Username\"\n              id=\"username\"\n              name=\"username\"\n              value={currentUser.username}\n              onChange={onInputChange}\n              required\n            />\n          </FormControl>\n          <FormControl fullWidth margin=\"normal\">\n            <InputLabel id=\"house-label\">House</InputLabel>\n            <Select\n              labelId=\"house-label\"\n              id=\"houseId\"\n              name=\"houseId\"\n              value={currentUser.houseId}\n              onChange={onInputChange}\n              required\n            >\n              {houses.map((house) => (\n                <MenuItem key={house._id} value={house._id}>\n                  {house.name}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n          <FormControl fullWidth margin=\"normal\">\n            <Button variant=\"contained\" component=\"label\">\n              Upload Profile Picture\n              <input\n                type=\"file\"\n                hidden\n                id=\"profilePicture\"\n                name=\"profilePicture\"\n                accept=\"image/*\"\n                onChange={handlePhotoChange}\n              />\n            </Button>\n            {currentUser.profilePicture && (\n              <Box mt={2} sx={{ textAlign: \"center\" }}>\n                {currentUser.profilePicture instanceof File ? (\n                  <ImageLoader\n                    src={URL.createObjectURL(currentUser.profilePicture)}\n                    alt=\"Duck Preview\"\n                    variant=\"retangular\"\n                    className=\"duck-image-preview\"\n                    height=\"200px\"\n                  />\n                ) : (\n                  <ImageLoader\n                    src={`${apiBaseUrl}/${currentUser.profilePicture.replace(/\\\\/g, \"/\")}`}\n                    variant=\"retangular\"\n                    alt=\"Duck Preview\"\n                    className=\"duck-image-preview\"\n                    height=\"200px\"\n                  />\n                )}\n              </Box>\n            )}\n          </FormControl>\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"success\"\n            fullWidth\n            sx={{ mt: 3 }}\n            disabled={submitting}\n          >\n            {submitting\n              ? \"Saving...\"\n              : isEditing\n              ? \"Update User\"\n              : \"Add User\"}\n          </Button>\n\n          {isEditing && (\n            <Button\n              variant=\"contained\"\n              color=\"error\"\n              fullWidth\n              sx={{ mt: 2 }}\n              onClick={onDelete}\n            >\n              Delete User\n            </Button>\n          )}\n        </Box>\n      </Box>\n    </Modal>\n  );\n};\n\nexport default UserModal;\n","import React from \"react\";\nimport {\n  List,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  Typography,\n  Skeleton,\n} from \"@mui/material\";\nimport ImageLoader from \"./ImageLoader\";\nimport \"./ItemList.css\";\nimport { format } from \"date-fns\"; // Import date-fns for formatting\n\nconst ItemList = ({\n  loading,\n  items,\n  type,\n  onEdit,\n  apiBaseUrl,\n  placeholderImage = \"https://via.placeholder.com/40\",\n}) => {\n  return (\n    <List sx={{ mt: 4 }}>\n      {loading\n        ? Array.from(new Array(5)).map((_, index) => (\n            <ListItem key={index} className={`admin-list-item`}>\n              <ListItemText\n                primary={<Skeleton variant=\"text\" width=\"40%\" height={30} />}\n                secondary={\n                  <>\n                    <Skeleton variant=\"text\" width=\"60%\" height={20} />\n                  </>\n                }\n              />\n              <ListItemSecondaryAction>\n                <Skeleton variant=\"circular\" width={40} height={40} />\n              </ListItemSecondaryAction>\n            </ListItem>\n          ))\n        : items.map((item) => (\n            <ListItem\n              key={item._id}\n              className={`admin-list-item`}\n              sx={{ cursor: \"pointer\" }}\n              onClick={() => onEdit(item)}\n            >\n              <ListItemText\n                primary={\n                  <Typography variant=\"h5\">\n                    {type === \"duck\"\n                      ? `Pato ${item.id}`\n                      : item.username || item.name}\n                  </Typography>\n                }\n                secondary={\n                  type === \"duck\" ? (\n                    <>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        Casa: {item.house?.name}\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        Participante: {item.user?.username}\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        Tipo: {item.type}\n                      </Typography>\n                      <Typography\n                        variant=\"body2\"\n                        color={item.found ? \"success.main\" : \"error.main\"}\n                      >\n                        {item.found && item.foundDate\n                          ? `Encontrado em ${format(\n                              new Date(item.foundDate),\n                              \"dd/MM/yyyy HH:mm\"\n                            )}`\n                          : item.found\n                          ? \"Encontrado, data indisponível\"\n                          : \"Escondido\"}\n                      </Typography>\n                    </>\n                  ) : null\n                }\n              />\n              {type === \"duck\" || type === \"user\" ? (\n                <ListItemSecondaryAction>\n                  <ImageLoader\n                    src={\n                      type === \"duck\"\n                        ? item.photo\n                          ? `${apiBaseUrl}/${item.photo.replace(/\\\\/g, \"/\")}`\n                          : placeholderImage\n                        : type === \"user\"\n                        ? item.profilePicture\n                          ? `${apiBaseUrl}/${item.profilePicture.replace(\n                              /\\\\/g,\n                              \"/\"\n                            )}`\n                          : placeholderImage\n                        : null\n                    }\n                    alt={\n                      type === \"duck\"\n                        ? `Duck ${item.id}`\n                        : item.username || item.name\n                    }\n                    variant=\"circular\"\n                    className={`${type}-image`}\n                    width={40}\n                    height={40}\n                  />\n                </ListItemSecondaryAction>\n              ) : null}\n            </ListItem>\n          ))}\n    </List>\n  );\n};\n\nexport default ItemList;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport Webcam from \"react-webcam\";\nimport {\n  Modal,\n  Box,\n  TextField,\n  Typography,\n  IconButton,\n  CircularProgress,\n  Alert,\n} from \"@mui/material\";\nimport { PhotoCamera, Cameraswitch, Replay, Save } from \"@mui/icons-material\"; // Correct import for Cameraswitch\nimport axios from \"axios\";\n\nconst apiBaseUrl =\n  process.env.REACT_APP_API_BASE_URL || \"https://localhost:4000\";\n\nconst QuickPhotoUpload = ({ open, handleClose, onUploadSuccess }) => {\n  const [imageSrc, setImageSrc] = useState(null); // For storing the captured image\n  const [duckNumber, setDuckNumber] = useState(''); // For storing the duck number input\n  const webcamRef = useRef(null); // Reference to the webcam\n  const [uploading, setUploading] = useState(false); // Loading state for uploads\n  const [devices, setDevices] = useState([]); // List of available media devices\n  const [selectedDeviceId, setSelectedDeviceId] = useState(''); // Currently selected rear camera ID\n  const [errorMessage, setErrorMessage] = useState(''); // Error message for duck not found\n  const [successMessage, setSuccessMessage] = useState(''); // Success message\n\n  useEffect(() => {\n    // Fetch media devices and filter for back-facing cameras\n    const getMediaDevices = async () => {\n      if (!navigator.mediaDevices || !navigator.mediaDevices.enumerateDevices) {\n        setErrorMessage('Navegador não suporta o acesso à câmera.');\n        return;\n      }\n  \n      try {\n        // Force the browser to prompt for camera permission\n        const stream = await navigator.mediaDevices.getUserMedia({ video: true });\n        \n        // If permission is granted, enumerate devices\n        const devices = await navigator.mediaDevices.enumerateDevices();\n        const videoDevices = devices.filter((device) => device.kind === 'videoinput');\n        const rearCameras = videoDevices.filter((device) =>\n          device.label.toLowerCase().includes('back')\n        );\n  \n        // Set the first rear camera by default\n        if (rearCameras.length > 0) {\n          setDevices(rearCameras);\n          setSelectedDeviceId(rearCameras[0].deviceId);\n        } else if (videoDevices.length > 0) {\n          setSelectedDeviceId(videoDevices[0].deviceId); // Default to the first available camera\n        } else {\n          setErrorMessage('Nenhuma câmera disponível!');\n        }\n  \n        // Stop the stream after getting permission (since we'll use the webcam component)\n        stream.getTracks().forEach(track => track.stop());\n      } catch (error) {\n        setErrorMessage('Permissão da câmera negada ou erro ao acessar a câmera.');\n        console.error('Camera permission error:', error);\n      }\n    };\n  \n    getMediaDevices();\n  }, []);\n  \n\n  // Function to capture the image from the webcam\n  const capturePhoto = () => {\n    const imageSrc = webcamRef.current.getScreenshot();\n    if (imageSrc) {\n      setImageSrc(imageSrc);\n      setSuccessMessage(''); // Clear success message when retaking photo\n    } else {\n      setErrorMessage('Erro ao capturar a foto. Tente novamente.');\n    }\n  };\n\n  // Function to switch between rear cameras\n  const switchCamera = () => {\n    if (devices.length > 1) {\n      const currentIndex = devices.findIndex((device) => device.deviceId === selectedDeviceId);\n      const nextIndex = (currentIndex + 1) % devices.length;\n      setSelectedDeviceId(devices[nextIndex].deviceId);\n    }\n  };\n\n  // Function to handle the duck number input\n  const handleDuckNumberChange = (e) => {\n    setDuckNumber(e.target.value);\n    setErrorMessage(''); // Clear the error message when the duck number changes\n    setSuccessMessage(''); // Clear success message when duck number changes\n  };\n\n  // Function to handle the upload of the photo\n  const handleUpload = async () => {\n    if (!duckNumber || !imageSrc) {\n      setErrorMessage('Número do pato ou foto ausente.');\n      return; // Prevent upload if duck number or image is missing\n    }\n\n    setUploading(true);\n    setErrorMessage(''); // Clear any previous error messages\n    setSuccessMessage(''); // Clear success message\n\n    try {\n      const formData = new FormData();\n\n      // Convert the base64 image to a file object for upload\n      const blob = await fetch(imageSrc).then((res) => res.blob());\n      formData.append('photo', new File([blob], 'duck-photo.jpg', { type: 'image/jpeg' }));\n\n      // PUT request to update only the image of the duck by custom ID\n      await axios.put(`${apiBaseUrl}/ducks/image/${duckNumber}`, formData, {\n        headers: { 'Content-Type': 'multipart/form-data' },\n      });\n\n      // Show success message and reset the form to allow another upload\n      setSuccessMessage(`Pato ${duckNumber} mudou de visual!`);\n      setImageSrc(null); // Reset the image to allow capturing/uploading another one\n      setDuckNumber(''); // Reset duck number input\n    } catch (error) {\n      if (error.response && error.response.status === 404) {\n        setErrorMessage(`Pato ${duckNumber} não encontrado!`);\n      } else if (error.response) {\n        setErrorMessage('Erro ao carregar a foto. Tente novamente.');\n      } else {\n        setErrorMessage('Erro de rede. Verifique sua conexão.');\n      }\n    } finally {\n      setUploading(false); // Stop loading after the request completes\n    }\n  };\n\n  return (\n    <Modal\n      open={open}\n      onClose={handleClose}\n      sx={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}\n    >\n      <Box\n        sx={{\n          bgcolor: \"background.paper\",\n          p: 4,\n          borderRadius: 1,\n          boxShadow: 24,\n          width: \"400px\",\n          textAlign: \"center\",\n        }}\n      >\n        {successMessage && (\n          <Alert severity=\"success\" sx={{ mt: 2, mb: 2 }}>\n            {successMessage}\n          </Alert>\n        )}\n        {!imageSrc ? (\n          <>\n            {selectedDeviceId && (\n              <Webcam\n                audio={false}\n                ref={webcamRef}\n                screenshotFormat=\"image/jpeg\"\n                width=\"100%\"\n                videoConstraints={{\n                  deviceId: selectedDeviceId, // Use the selected rear camera\n                }}\n              />\n            )}\n            <Box sx={{ display: \"flex\", justifyContent: \"center\", mt: 2 }}>\n              {devices.length > 1 && (\n                <IconButton\n                  onClick={switchCamera}\n                  sx={{\n                    backgroundColor: \"var(--secondary-color)\",\n                    \"&:hover\": {\n                      backgroundColor: \"var(--primary-color-hover)\",\n                    },\n                    color: \"white\",\n                    borderRadius: \"50%\",\n                    padding: \"16px\",\n                  }}\n                >\n                  <Cameraswitch sx={{ fontSize: 40 }} />\n                </IconButton>\n              )}\n              <IconButton\n                onClick={capturePhoto}\n                sx={{\n                  backgroundColor: \"var(--accent-color)\",\n                  \"&:hover\": {\n                    backgroundColor: \"var(--primary-color-hover)\",\n                  },\n                  color: \"white\",\n                  borderRadius: \"50%\",\n                  marginLeft: \"16px\",\n                  padding: \"16px\",\n                }}\n              >\n                <PhotoCamera sx={{ fontSize: 40 }} />\n              </IconButton>\n            </Box>\n          </>\n        ) : (\n          <>\n            <img\n              src={imageSrc}\n              alt=\"Captured Duck\"\n              style={{ width: \"100%\", borderRadius: \"8px\" }}\n            />\n            <TextField\n              label=\"Numero do Pato\"\n              type=\"number\"\n              fullWidth\n              value={duckNumber}\n              onChange={handleDuckNumberChange}\n              sx={{ mt: 2 }}\n              required\n            />\n            {errorMessage && (\n              <Alert severity=\"error\" sx={{ mt: 2, mb: 2 }}>\n                {errorMessage}\n              </Alert>\n            )}\n            <Box sx={{ display: \"flex\", justifyContent: \"center\", mt: 2 }}>\n              <IconButton\n                onClick={() => setImageSrc(null)}\n                disabled={uploading}\n                sx={{\n                  backgroundColor: \"var(--primary-color)\",\n                  \"&:hover\": {\n                    backgroundColor: \"var(--primary-color-hover)\",\n                  },\n                  color: \"white\",\n                  borderRadius: \"50%\",\n                  padding: \"16px\",\n                }}\n              >\n                <Replay sx={{ fontSize: 40 }} />\n              </IconButton>\n              <IconButton\n                onClick={handleUpload}\n                disabled={uploading}\n                sx={{\n                  backgroundColor: uploading ? \"gray\" : \"var(--success-color)\",\n                  \"&:hover\": {\n                    backgroundColor: uploading\n                      ? \"gray\"\n                      : \"var(--primary-color-hover)\",\n                  },\n                  color: \"white\",\n                  borderRadius: \"50%\",\n                  padding: \"16px\",\n                  marginLeft: \"16px\",\n                }}\n              >\n                {uploading ? (\n                  <CircularProgress size={24} />\n                ) : (\n                  <Save sx={{ fontSize: 40 }} />\n                )}\n              </IconButton>\n            </Box>\n          </>\n        )}\n      </Box>\n    </Modal>\n  );\n};\n\nexport default QuickPhotoUpload;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  Typography,\n  Container,\n  Tabs,\n  Tab,\n  Fab,\n  Grid,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Button,\n  Drawer,\n} from \"@mui/material\";\nimport { ArrowBack, FilterList } from \"@mui/icons-material\";\nimport { useNavigate } from \"react-router-dom\";\nimport { FaPlus, FaCamera } from \"react-icons/fa\";\nimport DuckModal from \"../components/DuckModal\";\nimport HouseModal from \"../components/HouseModal\";\nimport UserModal from \"../components/UserModal\";\nimport ItemList from \"../components/ItemList\";\nimport QuickPhotoUpload from \"../components/QuickPhotoUpload\";\n\nconst apiBaseUrl =\n  process.env.REACT_APP_API_BASE_URL || \"https://localhost:4000\";\n\nconst fetchDucks = async (setDucks, setLoading) => {\n  try {\n    const response = await axios.get(`${apiBaseUrl}/ducks`);\n    const ducksData = response.data;\n    setDucks(ducksData);\n    return ducksData;\n  } catch (error) {\n    console.error(\"Error fetching ducks:\", error);\n    return []; // Return an empty array on error\n  } finally {\n    setLoading(false);\n  }\n};\n\nconst fetchHouses = async (setHouses, setLoading) => {\n  try {\n    const response = await axios.get(`${apiBaseUrl}/houses`);\n    const housesData = response.data;\n    setHouses(housesData);\n    return housesData; // Return the houses data\n  } catch (error) {\n    console.error(\"Error fetching houses:\", error);\n    return []; // Return an empty array on error\n  } finally {\n    setLoading(false);\n  }\n};\n\nconst fetchUsers = async (setUsers, setLoading) => {\n  try {\n    const response = await axios.get(`${apiBaseUrl}/users`);\n    const usersData = response.data;\n    setUsers(usersData);\n    return usersData; // Return the users data\n  } catch (error) {\n    console.error(\"Error fetching users:\", error);\n    return []; // Return an empty array on error\n  } finally {\n    setLoading(false);\n  }\n};\n\nconst AdminPanel = () => {\n  const [ducks, setDucks] = useState([]);\n  const [houses, setHouses] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [currentDuck, setCurrentDuck] = useState({\n    id: \"\",\n    type: \"\",\n    houseId: \"\",\n    photo: \"\",\n    userId: \"\",\n    foundDate: \"\",\n  });\n  const [currentHouse, setCurrentHouse] = useState({\n    name: \"\",\n    address: \"\",\n  });\n  const [currentUser, setCurrentUser] = useState({\n    username: \"\",\n    houseId: \"\",\n    profilePicture: \"\",\n  });\n  const [activeTab, setActiveTab] = useState(0);\n  const [isDuckEditing, setIsDuckEditing] = useState(false);\n  const [isHouseEditing, setIsHouseEditing] = useState(false);\n  const [isUserEditing, setIsUserEditing] = useState(false);\n  const [showDuckModal, setShowDuckModal] = useState(false);\n  const [showHouseModal, setShowHouseModal] = useState(false);\n  const [showUserModal, setShowUserModal] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [duckSubmitting, setDuckSubmitting] = useState(false);\n  const [houseSubmitting, setHouseSubmitting] = useState(false);\n  const [userSubmitting, setUserSubmitting] = useState(false);\n  const [filteredItems, setFilteredItems] = useState([]);\n  const [openQuickUpload, setOpenQuickUpload] = useState(false);\n\n  // New state variables for filters and filter panel visibility\n  const [selectedFilterUserId, setSelectedFilterUserId] = useState(\"\");\n  const [selectedFilterHouseId, setSelectedFilterHouseId] = useState(\"\");\n  const [selectedFilterStatus, setSelectedFilterStatus] = useState(\"all\");\n  const [showFilters, setShowFilters] = useState(false); // Controls the visibility of the filters panel\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const isAdminAuthenticated = sessionStorage.getItem(\"isAdminAuthenticated\");\n    if (!isAdminAuthenticated) {\n      navigate(\"/\");\n    }\n  }, [navigate]);\n\n  useEffect(() => {\n    const loadInitialTab = async () => {\n      fetchHouses(setHouses, setLoading);\n      fetchUsers(setUsers, setLoading);\n      const ducksData = await fetchDucks(setDucks, setLoading);\n      // No need to setFilteredItems here; it will be set by handleFilterChange\n    };\n    loadInitialTab();\n  }, []);\n\n  useEffect(() => {\n    handleFilterChange();\n  }, [\n    selectedFilterUserId,\n    selectedFilterHouseId,\n    selectedFilterStatus,\n    ducks,\n  ]);\n\n  const handleFilterChange = () => {\n    let filtered = ducks;\n\n    if (selectedFilterUserId) {\n      filtered = filtered.filter(\n        (duck) => duck.user && duck.user._id === selectedFilterUserId\n      );\n    }\n\n    if (selectedFilterHouseId) {\n      filtered = filtered.filter(\n        (duck) => duck.house && duck.house._id === selectedFilterHouseId\n      );\n    }\n\n    if (selectedFilterStatus === \"found\") {\n      filtered = filtered.filter((duck) => duck.found === true);\n    } else if (selectedFilterStatus === \"not_found\") {\n      filtered = filtered.filter((duck) => duck.found === false);\n    }\n\n    setFilteredItems(filtered);\n  };\n\n  const handleTabChange = async (event, newValue) => {\n    setActiveTab(newValue);\n    switch (newValue) {\n      case 0:\n        await fetchDucks(setDucks, setLoading);\n        // No need to setFilteredItems; handleFilterChange will handle it\n        break;\n      case 1:\n        const usersData = await fetchUsers(setUsers, setLoading);\n        setFilteredItems(usersData);\n        break;\n      case 2:\n        const housesData = await fetchHouses(setHouses, setLoading);\n        setFilteredItems(housesData);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleDuckInputChange = (e) => {\n    const { name, value } = e.target;\n    setCurrentDuck({ ...currentDuck, [name]: value });\n  };\n\n  const handleHouseInputChange = (e) => {\n    const { name, value } = e.target;\n    setCurrentHouse({ ...currentHouse, [name]: value });\n  };\n\n  const handleUserInputChange = (e) => {\n    const { name, value } = e.target;\n    setCurrentUser({ ...currentUser, [name]: value });\n  };\n\n  const handleUserPhotoChange = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      setCurrentUser({ ...currentUser, profilePicture: file });\n    }\n  };\n\n  const handleDuckPhotoChange = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      setCurrentDuck({ ...currentDuck, photo: file });\n    }\n  };\n\n  const handleDuckSubmit = async (e) => {\n    e.preventDefault();\n    setDuckSubmitting(true);\n    try {\n      const formData = new FormData();\n      formData.append(\"id\", currentDuck.id);\n      formData.append(\"type\", currentDuck.type);\n      formData.append(\"houseId\", currentDuck.houseId);\n      formData.append(\"userId\", currentDuck.userId);\n      formData.append(\"foundDate\", currentDuck.foundDate);\n      if (currentDuck.photo instanceof File) {\n        formData.append(\"photo\", currentDuck.photo);\n      }\n\n      if (isDuckEditing) {\n        await axios.put(`${apiBaseUrl}/ducks/${currentDuck._id}`, formData, {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        });\n      } else {\n        formData.append(\"found\", false);\n        await axios.post(`${apiBaseUrl}/ducks`, formData, {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        });\n      }\n      await fetchDucks(setDucks, setLoading);\n      setShowDuckModal(false);\n    } catch (error) {\n      console.error(\"Error saving duck:\", error);\n    } finally {\n      setDuckSubmitting(false);\n    }\n  };\n\n  const handleHouseSubmit = async (e) => {\n    e.preventDefault();\n    setHouseSubmitting(true);\n    try {\n      if (isHouseEditing) {\n        await axios.put(\n          `${apiBaseUrl}/houses/${currentHouse._id}`,\n          currentHouse\n        );\n      } else {\n        await axios.post(`${apiBaseUrl}/houses`, currentHouse);\n      }\n      const updatedHouses = await fetchHouses(setHouses, setLoading);\n\n      if (activeTab === 2) {\n        setFilteredItems(updatedHouses);\n      }\n\n      setShowHouseModal(false);\n    } catch (error) {\n      console.error(\"Error saving house:\", error);\n    } finally {\n      setHouseSubmitting(false);\n    }\n  };\n\n  const handleUserSubmit = async (e) => {\n    e.preventDefault();\n    setUserSubmitting(true);\n    try {\n      const formData = new FormData();\n      formData.append(\"username\", currentUser.username);\n      formData.append(\"houseId\", currentUser.houseId);\n      if (currentUser.profilePicture instanceof File) {\n        formData.append(\"profilePicture\", currentUser.profilePicture);\n      }\n\n      if (isUserEditing) {\n        await axios.put(`${apiBaseUrl}/users/${currentUser._id}`, formData, {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        });\n      } else {\n        await axios.post(`${apiBaseUrl}/users`, formData, {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        });\n      }\n      const updatedUsers = await fetchUsers(setUsers, setLoading);\n\n      if (activeTab === 1) {\n        setFilteredItems(updatedUsers);\n      }\n\n      setShowUserModal(false);\n    } catch (error) {\n      console.error(\"Error saving user:\", error);\n    } finally {\n      setUserSubmitting(false);\n    }\n  };\n\n  const handleDuckDelete = async () => {\n    try {\n      await axios.delete(`${apiBaseUrl}/ducks/${currentDuck._id}`);\n      await fetchDucks(setDucks, setLoading);\n      setShowDuckModal(false);\n    } catch (error) {\n      console.error(\"Error deleting duck:\", error);\n    }\n  };\n\n  const handleHouseDelete = async () => {\n    try {\n      await axios.delete(`${apiBaseUrl}/houses/${currentHouse._id}`);\n      const updatedHouses = await fetchHouses(setHouses, setLoading);\n\n      if (activeTab === 2) {\n        setFilteredItems(updatedHouses);\n      }\n      setShowHouseModal(false);\n    } catch (error) {\n      console.error(\"Error deleting house:\", error);\n    }\n  };\n\n  const handleUserDelete = async () => {\n    try {\n      await axios.delete(`${apiBaseUrl}/users/${currentUser._id}`);\n      const updatedUsers = await fetchUsers(setUsers, setLoading);\n\n      if (activeTab === 1) {\n        setFilteredItems(updatedUsers);\n      }\n      setShowUserModal(false);\n    } catch (error) {\n      console.error(\"Error deleting user:\", error);\n    }\n  };\n\n  const openDuckEditModal = (duck) => {\n    setCurrentDuck({\n      _id: duck._id,\n      userId: duck.user ? duck.user._id : \"\",\n      houseId: duck.house ? duck.house._id : \"\",\n      id: duck.id,\n      type: duck.type,\n      photo: duck.photo,\n      found: duck.found,\n      foundDate: duck.foundDate,\n    });\n    setIsDuckEditing(true);\n    setShowDuckModal(true);\n  };\n\n  const handleOpenModal = (type) => {\n    if (activeTab === 0) {\n      openDuckAddModal();\n    } else if (activeTab === 1) {\n      openUserAddModal();\n    } else {\n      openHouseAddModal();\n    }\n  };\n\n  const openDuckAddModal = () => {\n    setCurrentDuck({\n      userId: \"\",\n      houseId: \"\",\n      id: \"\",\n      type: \"normal\",\n      found: false,\n    });\n    setIsDuckEditing(false);\n    setShowDuckModal(true);\n  };\n\n  const openHouseEditModal = (house) => {\n    setCurrentHouse(house);\n    setIsHouseEditing(true);\n    setShowHouseModal(true);\n  };\n\n  const openHouseAddModal = () => {\n    setCurrentHouse({ name: \"\", address: \"\" });\n    setIsHouseEditing(false);\n    setShowHouseModal(true);\n  };\n\n  const openUserAddModal = () => {\n    setCurrentUser({\n      username: \"\",\n      houseId: \"\",\n      profilePicture: \"\",\n    });\n    setIsUserEditing(false);\n    setShowUserModal(true);\n  };\n\n  const openUserEditModal = (user) => {\n    setCurrentUser({\n      _id: user._id,\n      username: user.username,\n      houseId: user.house ? user.house._id : \"\",\n      profilePicture: user.profilePicture,\n    });\n    setIsUserEditing(true);\n    setShowUserModal(true);\n  };\n\n  // Function to open the quick upload modal\n  const handleOpenQuickUpload = () => {\n    setOpenQuickUpload(true);\n  };\n\n  // Function to close the quick upload modal\n  const handleCloseQuickUpload = () => {\n    setOpenQuickUpload(false);\n  };\n\n  // Callback after successful upload to refresh the duck list\n  const handleUploadSuccess = () => {\n    // Logic to refresh your duck list here\n    setOpenQuickUpload(false);\n    // Fetch ducks again if needed\n  };\n\n  // Function to toggle the visibility of the filters panel\n  const toggleFilters = () => {\n    setShowFilters(!showFilters);\n  };\n\n  return (\n    <>\n      <AppBar className=\"Appbar\" position=\"sticky\" color=\"default\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"back\"\n            onClick={() => navigate(-1)}\n          >\n            <ArrowBack />\n          </IconButton>\n          <Typography\n            component=\"div\"\n            sx={{ flexGrow: 1, alignItems: \"center\", textAlign: \"center\" }}\n          >\n            <h2 style={{ margin: 0 }}>Admin</h2>\n          </Typography>\n          {activeTab === 0 && (\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"filter\"\n              onClick={toggleFilters}\n            >\n              <FilterList />\n            </IconButton>\n          )}\n        </Toolbar>\n        <Tabs\n          value={activeTab}\n          onChange={handleTabChange}\n          aria-label=\"Admin Tabs\"\n          centered\n          indicatorColor=\"primary\"\n          sx={{\n            \"& .MuiTab-root\": {\n              color: \"var(--text-color)\", // Text color of the tab\n              fontFamily: \"var(--font-family)\", // Custom font\n              \"&.Mui-selected\": {\n                color: \"var(--primary-color)\", // Color of the selected tab\n                fontWeight: \"bold\", // Bold text for the selected tab\n              },\n            },\n            \"& .MuiTabs-indicator\": {\n              backgroundColor: \"var(--primary-color)\", // Indicator color\n              height: \"4px\",\n            },\n          }}\n        >\n          <Tab label=\"Patos\" />\n          <Tab label=\"Participantes\" />\n          <Tab label=\"Casas\" />\n        </Tabs>\n      </AppBar>\n      <Fab\n        color=\"primary\"\n        aria-label=\"add\"\n        onClick={handleOpenModal}\n        sx={{\n          position: \"fixed\",\n          bottom: 16,\n          right: 16,\n          backgroundColor: \"var(--accent-color)\", // Use the accent color for the FAB\n          \"&:hover\": {\n            backgroundColor: \"var(--primary-color-hover)\", // Hover color for the FAB\n          },\n          color: \"white\", // Text color inside the FAB\n        }}\n      >\n        <FaPlus />\n      </Fab>\n      <Fab\n        color=\"primary\"\n        aria-label=\"camera\"\n        onClick={handleOpenQuickUpload}\n        sx={{\n          position: \"fixed\",\n          bottom: 100,\n          right: 16,\n          backgroundColor: \"var(--accent-color)\", // Use the accent color for the FAB\n          \"&:hover\": {\n            backgroundColor: \"var(--primary-color-hover)\", // Hover color for the FAB\n          },\n          color: \"white\", // Text color inside the FAB\n        }}\n      >\n        <FaCamera />\n      </Fab>\n\n      {/* Modals */}\n      <DuckModal\n        open={showDuckModal}\n        handleClose={() => setShowDuckModal(false)}\n        isEditing={isDuckEditing}\n        currentDuck={currentDuck}\n        houses={houses}\n        users={users}\n        handleInputChange={handleDuckInputChange}\n        handlePhotoChange={handleDuckPhotoChange}\n        handleSubmit={handleDuckSubmit}\n        handleDelete={handleDuckDelete}\n        submitting={duckSubmitting}\n        apiBaseUrl={apiBaseUrl}\n      />\n      <HouseModal\n        open={showHouseModal} // State to control the modal visibility\n        handleClose={() => setShowHouseModal(false)} // Function to close the modal\n        isEditing={isHouseEditing} // State to track if we are editing or adding\n        currentHouse={currentHouse} // State holding the current house data\n        handleInputChange={handleHouseInputChange} // Function to handle form input changes\n        handleSubmit={handleHouseSubmit} // Function to handle form submission\n        handleDelete={handleHouseDelete} // Function to handle house deletion\n        submitting={houseSubmitting} // State to track form submission\n      />\n      <UserModal\n        open={showUserModal}\n        onClose={() => setShowUserModal(false)}\n        isEditing={isUserEditing}\n        currentUser={currentUser}\n        houses={houses}\n        onInputChange={handleUserInputChange}\n        handlePhotoChange={handleUserPhotoChange}\n        onSubmit={handleUserSubmit}\n        onDelete={handleUserDelete}\n        submitting={userSubmitting}\n        apiBaseUrl={apiBaseUrl}\n      />\n      <QuickPhotoUpload\n        open={openQuickUpload}\n        handleClose={handleCloseQuickUpload}\n        onUploadSuccess={handleUploadSuccess}\n      />\n      <Container>\n        <Drawer\n          anchor=\"right\"\n          open={showFilters}\n          onClose={toggleFilters}\n          variant=\"temporary\"\n        >\n          <div style={{ width: 250, padding: 16 }}>\n            <Typography variant=\"h6\">Filters</Typography>\n            <FormControl fullWidth margin=\"normal\">\n              <InputLabel>User</InputLabel>\n              <Select\n                value={selectedFilterUserId}\n                onChange={(e) => setSelectedFilterUserId(e.target.value)}\n              >\n                <MenuItem value=\"\">\n                  <em>All</em>\n                </MenuItem>\n                {users.map((user) => (\n                  <MenuItem key={user._id} value={user._id}>\n                    {user.username}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n            <FormControl fullWidth margin=\"normal\">\n              <InputLabel>House</InputLabel>\n              <Select\n                value={selectedFilterHouseId}\n                onChange={(e) => setSelectedFilterHouseId(e.target.value)}\n              >\n                <MenuItem value=\"\">\n                  <em>All</em>\n                </MenuItem>\n                {houses.map((house) => (\n                  <MenuItem key={house._id} value={house._id}>\n                    {house.name}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n            <FormControl fullWidth margin=\"normal\">\n              <InputLabel>Status</InputLabel>\n              <Select\n                value={selectedFilterStatus}\n                onChange={(e) => setSelectedFilterStatus(e.target.value)}\n              >\n                <MenuItem value=\"all\">All</MenuItem>\n                <MenuItem value=\"found\">Found</MenuItem>\n                <MenuItem value=\"not_found\">Not Found</MenuItem>\n              </Select>\n            </FormControl>\n            <Button\n              variant=\"outlined\"\n              onClick={() => {\n                setSelectedFilterUserId(\"\");\n                setSelectedFilterHouseId(\"\");\n                setSelectedFilterStatus(\"all\");\n              }}\n              fullWidth\n            >\n              Clear Filters\n            </Button>\n          </div>\n        </Drawer>\n\n        <ItemList\n          loading={loading}\n          items={filteredItems}\n          type={activeTab === 0 ? \"duck\" : activeTab === 1 ? \"user\" : \"house\"}\n          onEdit={\n            activeTab === 0\n              ? openDuckEditModal\n              : activeTab === 1\n              ? openUserEditModal\n              : openHouseEditModal\n          }\n          apiBaseUrl={apiBaseUrl}\n        />\n      </Container>\n    </>\n  );\n};\n\nexport default AdminPanel;\n"],"names":["_ref","src","alt","variant","className","width","height","loading","setLoading","useState","_jsxs","style","position","children","_jsx","Skeleton","top","left","onLoad","display","borderRadius","open","handleClose","isEditing","currentDuck","houses","users","handleInputChange","handlePhotoChange","handleSubmit","handleDelete","submitting","apiBaseUrl","formattedFoundDate","foundDate","format","Date","Modal","onClose","sx","alignItems","justifyContent","marginX","overflowY","Box","bgcolor","p","boxShadow","maxWidth","maxHeight","Typography","id","component","gutterBottom","IconButton","onClick","right","CloseIcon","onSubmit","FormControl","fullWidth","margin","TextField","label","type","name","value","onChange","disabled","required","InputLabel","Select","labelId","MenuItem","houseId","map","house","_id","userId","user","username","found","InputLabelProps","shrink","Button","hidden","accept","photo","mt","textAlign","File","ImageLoader","URL","createObjectURL","replace","color","currentHouse","address","currentUser","onInputChange","onDelete","profilePicture","items","onEdit","placeholderImage","List","Array","from","_","index","ListItem","ListItemText","primary","secondary","_Fragment","ListItemSecondaryAction","item","_item$house","_item$user","cursor","onUploadSuccess","imageSrc","setImageSrc","duckNumber","setDuckNumber","webcamRef","useRef","uploading","setUploading","devices","setDevices","selectedDeviceId","setSelectedDeviceId","errorMessage","setErrorMessage","successMessage","setSuccessMessage","useEffect","async","navigator","mediaDevices","enumerateDevices","stream","getUserMedia","video","videoDevices","filter","device","kind","rearCameras","toLowerCase","includes","length","deviceId","getTracks","forEach","track","stop","error","console","getMediaDevices","Alert","severity","mb","e","target","backgroundColor","padding","Replay","fontSize","formData","FormData","blob","fetch","then","res","append","axios","put","headers","response","status","marginLeft","CircularProgress","size","Save","Webcam","audio","ref","screenshotFormat","videoConstraints","switchCamera","nextIndex","findIndex","Cameraswitch","capturePhoto","current","getScreenshot","PhotoCamera","process","fetchDucks","setDucks","ducksData","get","data","fetchHouses","setHouses","housesData","fetchUsers","setUsers","usersData","AdminPanel","ducks","setCurrentDuck","setCurrentHouse","setCurrentUser","activeTab","setActiveTab","isDuckEditing","setIsDuckEditing","isHouseEditing","setIsHouseEditing","isUserEditing","setIsUserEditing","showDuckModal","setShowDuckModal","showHouseModal","setShowHouseModal","showUserModal","setShowUserModal","duckSubmitting","setDuckSubmitting","houseSubmitting","setHouseSubmitting","userSubmitting","setUserSubmitting","filteredItems","setFilteredItems","openQuickUpload","setOpenQuickUpload","selectedFilterUserId","setSelectedFilterUserId","selectedFilterHouseId","setSelectedFilterHouseId","selectedFilterStatus","setSelectedFilterStatus","showFilters","setShowFilters","navigate","useNavigate","sessionStorage","getItem","loadInitialTab","handleFilterChange","filtered","duck","openDuckAddModal","openHouseAddModal","openUserAddModal","toggleFilters","AppBar","Toolbar","edge","ArrowBack","flexGrow","FilterList","Tabs","event","newValue","centered","indicatorColor","fontFamily","fontWeight","Tab","Fab","bottom","FaPlus","handleOpenQuickUpload","FaCamera","DuckModal","file","files","preventDefault","post","delete","HouseModal","updatedHouses","UserModal","updatedUsers","QuickPhotoUpload","handleCloseQuickUpload","handleUploadSuccess","Container","Drawer","anchor","ItemList"],"sourceRoot":""}
{"version":3,"file":"static/js/180.2648f721.chunk.js","mappings":"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","sources":["components/ImageLoader.js","components/DuckModal.js","components/HouseModal.js","components/UserModal.js","components/ItemList.js","components/QuickPhotoUpload.js","components/ClueModal.js","pages/AdminPanel.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Skeleton from '@mui/material/Skeleton';\n\nconst ImageLoader = ({ src, alt,variant, className, width, height }) => {\n  const [loading, setLoading] = useState(true);\n\n  return (\n    <div className=\"image-container\" style={{ position: 'relative', width, height }}>\n      {loading && (\n        <Skeleton\n          variant={variant}\n          width={width}\n          height={height}\n          style={{ position: 'absolute', top: 0, left: 0 }}\n        />\n      )}\n      <img\n        src={src}\n        alt={alt}\n        className={className}\n        onLoad={() => setLoading(false)}\n        style={{ display: loading ? 'none' : 'block', borderRadius: variant === 'circular' ? '50%' : '', width, height }}\n      />\n    </div>\n  );\n};\n\nexport default ImageLoader;\n","import React from \"react\";\nimport {\n  Modal,\n  Box,\n  Typography,\n  IconButton,\n  FormControl,\n  TextField,\n  InputLabel,\n  Select,\n  MenuItem,\n  Button,\n} from \"@mui/material\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport ImageLoader from \"./ImageLoader\";\nimport { format } from \"date-fns\"; // Use date-fns for formatting the date\n\nconst DuckModal = ({\n  open,\n  handleClose,\n  isEditing,\n  currentDuck,\n  houses,\n  users,\n  handleInputChange,\n  handlePhotoChange,\n  handleSubmit,\n  handleDelete,\n  submitting,\n  apiBaseUrl,\n  handleImageClick,\n}) => {\n  // Format the foundDate if it exists\n  const formattedFoundDate = currentDuck.foundDate\n    ? format(new Date(currentDuck.foundDate), \"yyyy-MM-dd'T'HH:mm\") // Proper format for datetime-local input\n    : \"\";\n\n  return (\n    <Modal\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"modal-title\"\n      aria-describedby=\"modal-description\"\n      sx={{\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        marginX: 6,\n        overflowY: \"auto\",\n      }}\n    >\n      <Box\n        sx={{\n          bgcolor: \"background.paper\",\n          p: 4,\n          borderRadius: 1,\n          boxShadow: 24,\n          maxWidth: \"90vw\",\n          maxHeight: \"90vh\",\n          overflowY: \"auto\",\n          position: \"relative\",\n        }}\n      >\n        <Typography id=\"modal-title\" variant=\"h6\" component=\"h2\" gutterBottom>\n          {isEditing ? \"Edit Duck\" : \"Add New Duck\"}\n          <IconButton\n            aria-label=\"close\"\n            onClick={handleClose}\n            sx={{ position: \"absolute\", right: 8, top: 8 }}\n          >\n            <CloseIcon />\n          </IconButton>\n        </Typography>\n        <Box component=\"form\" onSubmit={handleSubmit}>\n          <FormControl fullWidth margin=\"normal\">\n            <TextField\n              label=\"Numero\"\n              type=\"number\"\n              id=\"duckNumber\"\n              name=\"id\"\n              value={currentDuck.id}\n              onChange={handleInputChange}\n              disabled={isEditing}\n              required\n            />\n          </FormControl>\n          <FormControl fullWidth margin=\"normal\">\n            <InputLabel id=\"duckType-label\">Tipo</InputLabel>\n            <Select\n              labelId=\"duckType-label\"\n              id=\"duckType\"\n              name=\"type\"\n              value={currentDuck.type}\n              onChange={handleInputChange}\n              required\n            >\n              <MenuItem value=\"normal\">Normal</MenuItem>\n              <MenuItem value=\"oclinhos\">Oclinhos</MenuItem>\n            </Select>\n          </FormControl>\n          <FormControl fullWidth margin=\"normal\">\n            <InputLabel id=\"duckHouse-label\">Casa</InputLabel>\n            <Select\n              labelId=\"duckHouse-label\"\n              id=\"duckHouse\"\n              name=\"houseId\"\n              value={currentDuck.houseId}\n              onChange={handleInputChange}\n              required\n            >\n              {houses.map((house) => (\n                <MenuItem key={house._id} value={house._id}>\n                  {house.name}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n          <FormControl fullWidth margin=\"normal\">\n            <InputLabel id=\"duckUser-label\">User</InputLabel>\n            <Select\n              labelId=\"duckUser-label\"\n              id=\"duckUser\"\n              name=\"userId\"\n              value={currentDuck.userId}\n              onChange={handleInputChange}\n              required\n            >\n              {users.map((user) => (\n                <MenuItem key={user._id} value={user._id}>\n                  {user.username}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n          {currentDuck.found && (\n            <FormControl fullWidth margin=\"normal\">\n              <TextField\n                label=\"Data Encontrado\"\n                type=\"datetime-local\"\n                id=\"foundDate\"\n                name=\"foundDate\"\n                value={formattedFoundDate}\n                onChange={handleInputChange} // Allow changes to the date and time\n                InputLabelProps={{\n                  shrink: true, // Keep the label floating even when the input is filled\n                }}\n              />\n            </FormControl>\n          )}\n          <FormControl fullWidth margin=\"normal\">\n            <Button variant=\"contained\" component=\"label\">\n              Upload Photo\n              <input\n                type=\"file\"\n                hidden\n                id=\"duckPhoto\"\n                name=\"photo\"\n                accept=\"image/*\"\n                onChange={handlePhotoChange}\n              />\n            </Button>\n            {currentDuck.photo && (\n              <Box mt={2} sx={{ textAlign: \"center\" }} onClick={() => handleImageClick(currentDuck)}>\n                {currentDuck.photo instanceof File ? (\n                  <ImageLoader\n                    src={URL.createObjectURL(currentDuck.photo)}\n                    alt=\"Duck Preview\"\n                    variant=\"retangular\"\n                    className=\"duck-image-preview\"\n                    height=\"200px\"\n                    \n                  />\n                ) : (\n                  <ImageLoader\n                    src={`${apiBaseUrl}/${currentDuck.photo.replace(\n                      /\\\\/g,\n                      \"/\"\n                    )}`}\n                    variant=\"retangular\"\n                    alt=\"Duck Preview\"\n                    className=\"duck-image-preview\"\n                    height=\"200px\"\n                    onClick={() => handleImageClick(currentDuck)}\n                  />\n                )}\n              </Box>\n            )}\n          </FormControl>\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"success\"\n            fullWidth\n            sx={{ mt: 3 }}\n            disabled={submitting}\n          >\n            {submitting ? \"Saving...\" : isEditing ? \"Update Duck\" : \"Add Duck\"}\n          </Button>\n\n          {isEditing && (\n            <Button\n              variant=\"contained\"\n              color=\"error\"\n              fullWidth\n              sx={{ mt: 2 }}\n              onClick={handleDelete}\n            >\n              Delete Duck\n            </Button>\n          )}\n        </Box>\n      </Box>\n    </Modal>\n  );\n};\n\nexport default DuckModal;\n","import React from \"react\";\nimport {\n  Modal,\n  Box,\n  Typography,\n  IconButton,\n  FormControl,\n  TextField,\n  Button,\n} from \"@mui/material\";\nimport CloseIcon from \"@mui/icons-material/Close\";\n\nconst HouseModal = ({\n  open,\n  handleClose,\n  isEditing,\n  currentHouse,\n  handleInputChange,\n  handleSubmit,\n  handleDelete,\n  submitting,\n}) => {\n  return (\n    <Modal\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"modal-title\"\n      aria-describedby=\"modal-description\"\n      sx={{\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        marginX: 6,\n        overflowY: \"auto\",\n      }}\n    >\n      <Box\n        sx={{\n          bgcolor: \"background.paper\",\n          p: 4,\n          borderRadius: 1,\n          boxShadow: 24,\n          maxWidth: \"90vw\",\n          maxHeight: \"90vh\",\n          overflowY: \"auto\",\n          position: \"relative\",\n        }}\n      >\n        <Typography\n          id=\"modal-title\"\n          variant=\"h6\"\n          component=\"h2\"\n          gutterBottom\n        >\n          {isEditing ? \"Edit House\" : \"Add New House\"}\n          <IconButton\n            aria-label=\"close\"\n            onClick={handleClose}\n            sx={{ position: \"absolute\", right: 8, top: 8 }}\n          >\n            <CloseIcon />\n          </IconButton>\n        </Typography>\n        <Box component=\"form\" onSubmit={handleSubmit}>\n          <FormControl fullWidth margin=\"normal\">\n            <TextField\n              label=\"Name\"\n              type=\"text\"\n              id=\"houseName\"\n              name=\"name\"\n              value={currentHouse.name}\n              onChange={handleInputChange}\n              required\n            />\n          </FormControl>\n          <FormControl fullWidth margin=\"normal\">\n            <TextField\n              label=\"Address\"\n              type=\"text\"\n              id=\"houseAddress\"\n              name=\"address\"\n              value={currentHouse.address}\n              onChange={handleInputChange}\n            />\n          </FormControl>\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"success\"\n            fullWidth\n            sx={{ mt: 3 }}\n            disabled={submitting}\n          >\n            {submitting\n              ? \"Saving...\"\n              : isEditing\n              ? \"Update House\"\n              : \"Add House\"}\n          </Button>\n\n          {isEditing && (\n            <Button\n              variant=\"contained\"\n              color=\"error\"\n              fullWidth\n              sx={{ mt: 2 }}\n              onClick={handleDelete}\n            >\n              Delete House\n            </Button>\n          )}\n        </Box>\n      </Box>\n    </Modal>\n  );\n};\n\nexport default HouseModal;\n","import React from \"react\";\nimport {\n  Modal,\n  Box,\n  Typography,\n  IconButton,\n  FormControl,\n  TextField,\n  Button,\n  Select,\n  MenuItem,\n  InputLabel,\n} from \"@mui/material\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport ImageLoader from \"./ImageLoader\";\n\nconst UserModal = ({\n  open,\n  onClose,\n  isEditing,\n  currentUser,\n  houses,\n  onInputChange,\n  handlePhotoChange,\n  onSubmit,\n  onDelete,\n  submitting,\n  apiBaseUrl\n}) => {\n  return (\n    <Modal\n      open={open}\n      onClose={onClose}\n      aria-labelledby=\"modal-title\"\n      aria-describedby=\"modal-description\"\n      sx={{\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        marginX: 6,\n        overflowY: \"auto\",\n      }}\n    >\n      <Box\n        sx={{\n          bgcolor: \"background.paper\",\n          p: 4,\n          borderRadius: 1,\n          boxShadow: 24,\n          maxWidth: \"90vw\",\n          maxHeight: \"90vh\",\n          overflowY: \"auto\",\n          position: \"relative\",\n        }}\n      >\n        <Typography\n          id=\"modal-title\"\n          variant=\"h6\"\n          component=\"h2\"\n          gutterBottom\n        >\n          {isEditing ? \"Edit User\" : \"Add New User\"}\n          <IconButton\n            aria-label=\"close\"\n            onClick={onClose}\n            sx={{ position: \"absolute\", right: 8, top: 8 }}\n          >\n            <CloseIcon />\n          </IconButton>\n        </Typography>\n        <Box component=\"form\" onSubmit={onSubmit}>\n          <FormControl fullWidth margin=\"normal\">\n            <TextField\n              label=\"Username\"\n              id=\"username\"\n              name=\"username\"\n              value={currentUser.username}\n              onChange={onInputChange}\n              required\n            />\n          </FormControl>\n          <FormControl fullWidth margin=\"normal\">\n            <InputLabel id=\"house-label\">House</InputLabel>\n            <Select\n              labelId=\"house-label\"\n              id=\"houseId\"\n              name=\"houseId\"\n              value={currentUser.houseId}\n              onChange={onInputChange}\n              required\n            >\n              {houses.map((house) => (\n                <MenuItem key={house._id} value={house._id}>\n                  {house.name}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n          <FormControl fullWidth margin=\"normal\">\n            <Button variant=\"contained\" component=\"label\">\n              Upload Profile Picture\n              <input\n                type=\"file\"\n                hidden\n                id=\"profilePicture\"\n                name=\"profilePicture\"\n                accept=\"image/*\"\n                onChange={handlePhotoChange}\n              />\n            </Button>\n            {currentUser.profilePicture && (\n              <Box mt={2} sx={{ textAlign: \"center\" }}>\n                {currentUser.profilePicture instanceof File ? (\n                  <ImageLoader\n                    src={URL.createObjectURL(currentUser.profilePicture)}\n                    alt=\"Duck Preview\"\n                    variant=\"retangular\"\n                    className=\"duck-image-preview\"\n                    height=\"200px\"\n                  />\n                ) : (\n                  <ImageLoader\n                    src={`${apiBaseUrl}/${currentUser.profilePicture.replace(/\\\\/g, \"/\")}`}\n                    variant=\"retangular\"\n                    alt=\"Duck Preview\"\n                    className=\"duck-image-preview\"\n                    height=\"200px\"\n                  />\n                )}\n              </Box>\n            )}\n          </FormControl>\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"success\"\n            fullWidth\n            sx={{ mt: 3 }}\n            disabled={submitting}\n          >\n            {submitting\n              ? \"Saving...\"\n              : isEditing\n              ? \"Update User\"\n              : \"Add User\"}\n          </Button>\n\n          {isEditing && (\n            <Button\n              variant=\"contained\"\n              color=\"error\"\n              fullWidth\n              sx={{ mt: 2 }}\n              onClick={onDelete}\n            >\n              Delete User\n            </Button>\n          )}\n        </Box>\n      </Box>\n    </Modal>\n  );\n};\n\nexport default UserModal;\n","import React from \"react\";\nimport {\n  List,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  Typography,\n  Skeleton,\n} from \"@mui/material\";\nimport ImageLoader from \"./ImageLoader\";\nimport \"./ItemList.css\";\nimport { format } from \"date-fns\"; // Import date-fns for formatting\n\nconst ItemList = ({\n  loading,\n  items,\n  type,\n  onEdit,\n  apiBaseUrl,\n  placeholderImage = \"https://via.placeholder.com/40\",\n}) => {\n  return (\n    <List sx={{ mt: 4 }}>\n      {loading\n        ? Array.from(new Array(5)).map((_, index) => (\n            <ListItem key={index} className={`admin-list-item`}>\n              <ListItemText\n                primary={<Skeleton variant=\"text\" width=\"40%\" height={30} />}\n                secondary={\n                  <>\n                    <Skeleton variant=\"text\" width=\"60%\" height={20} />\n                  </>\n                }\n              />\n              <ListItemSecondaryAction>\n                <Skeleton variant=\"circular\" width={40} height={40} />\n              </ListItemSecondaryAction>\n            </ListItem>\n          ))\n        : items.map((item) => (\n            <ListItem\n              key={item._id}\n              className={`admin-list-item`}\n              sx={{ cursor: \"pointer\" }}\n              onClick={() => onEdit(item)}\n            >\n              <ListItemText\n                primary={\n                  <Typography variant=\"h5\">\n                    {type === \"duck\"\n                      ? `Pato ${item.id}`\n                      : item.username || item.name}\n                  </Typography>\n                }\n                secondary={\n                  type === \"duck\" ? (\n                    <>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        Casa: {item.house?.name}\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        Participante: {item.user?.username}\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        Tipo: {item.type}\n                      </Typography>\n                      <Typography\n                        variant=\"body2\"\n                        color={item.found ? \"success.main\" : \"error.main\"}\n                      >\n                        {item.found && item.foundDate\n                          ? `Encontrado em ${format(\n                              new Date(item.foundDate),\n                              \"dd/MM/yyyy HH:mm\"\n                            )}`\n                          : item.found\n                          ? \"Encontrado, data indisponível\"\n                          : \"Escondido\"}\n                      </Typography>\n                    </>\n                  ) : null\n                }\n              />\n              {type === \"duck\" || type === \"user\" ? (\n                <ListItemSecondaryAction>\n                  <ImageLoader\n                    src={\n                      type === \"duck\"\n                        ? item.photo\n                          ? `${apiBaseUrl}/${item.photo.replace(/\\\\/g, \"/\")}`\n                          : placeholderImage\n                        : type === \"user\"\n                        ? item.profilePicture\n                          ? `${apiBaseUrl}/${item.profilePicture.replace(\n                              /\\\\/g,\n                              \"/\"\n                            )}`\n                          : placeholderImage\n                        : null\n                    }\n                    alt={\n                      type === \"duck\"\n                        ? `Duck ${item.id}`\n                        : item.username || item.name\n                    }\n                    variant=\"circular\"\n                    className={`${type}-image`}\n                    width={40}\n                    height={40}\n                  />\n                </ListItemSecondaryAction>\n              ) : null}\n            </ListItem>\n          ))}\n    </List>\n  );\n};\n\nexport default ItemList;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport Webcam from \"react-webcam\";\nimport {\n  Modal,\n  Box,\n  TextField,\n  Typography,\n  IconButton,\n  CircularProgress,\n  Alert,\n} from \"@mui/material\";\nimport { PhotoCamera, Cameraswitch, Replay, Save } from \"@mui/icons-material\"; // Correct import for Cameraswitch\nimport axios from \"axios\";\n\nconst apiBaseUrl =\n  process.env.REACT_APP_API_BASE_URL || \"https://localhost:4000\";\n\nconst QuickPhotoUpload = ({ open, handleClose, onUploadSuccess }) => {\n  const [imageSrc, setImageSrc] = useState(null); // For storing the captured image\n  const [duckNumber, setDuckNumber] = useState(''); // For storing the duck number input\n  const webcamRef = useRef(null); // Reference to the webcam\n  const [uploading, setUploading] = useState(false); // Loading state for uploads\n  const [devices, setDevices] = useState([]); // List of available media devices\n  const [selectedDeviceId, setSelectedDeviceId] = useState(''); // Currently selected rear camera ID\n  const [errorMessage, setErrorMessage] = useState(''); // Error message for duck not found\n  const [successMessage, setSuccessMessage] = useState(''); // Success message\n\n  useEffect(() => {\n    // Fetch media devices and filter for back-facing cameras\n    const getMediaDevices = async () => {\n      if (!navigator.mediaDevices || !navigator.mediaDevices.enumerateDevices) {\n        setErrorMessage('Navegador não suporta o acesso à câmera.');\n        return;\n      }\n  \n      try {\n        // Force the browser to prompt for camera permission\n        const stream = await navigator.mediaDevices.getUserMedia({ video: true });\n        \n        // If permission is granted, enumerate devices\n        const devices = await navigator.mediaDevices.enumerateDevices();\n        const videoDevices = devices.filter((device) => device.kind === 'videoinput');\n        const rearCameras = videoDevices.filter((device) =>\n          device.label.toLowerCase().includes('back')\n        );\n  \n        // Set the first rear camera by default\n        if (rearCameras.length > 0) {\n          setDevices(rearCameras);\n          setSelectedDeviceId(rearCameras[0].deviceId);\n        } else if (videoDevices.length > 0) {\n          setSelectedDeviceId(videoDevices[0].deviceId); // Default to the first available camera\n        } else {\n          setErrorMessage('Nenhuma câmera disponível!');\n        }\n  \n        // Stop the stream after getting permission (since we'll use the webcam component)\n        stream.getTracks().forEach(track => track.stop());\n      } catch (error) {\n        setErrorMessage('Permissão da câmera negada ou erro ao acessar a câmera.');\n        console.error('Camera permission error:', error);\n      }\n    };\n  \n    getMediaDevices();\n  }, []);\n  \n\n  // Function to capture the image from the webcam\n  const capturePhoto = () => {\n    const imageSrc = webcamRef.current.getScreenshot();\n    if (imageSrc) {\n      setImageSrc(imageSrc);\n      setSuccessMessage(''); // Clear success message when retaking photo\n    } else {\n      setErrorMessage('Erro ao capturar a foto. Tente novamente.');\n    }\n  };\n\n  // Function to switch between rear cameras\n  const switchCamera = () => {\n    if (devices.length > 1) {\n      const currentIndex = devices.findIndex((device) => device.deviceId === selectedDeviceId);\n      const nextIndex = (currentIndex + 1) % devices.length;\n      setSelectedDeviceId(devices[nextIndex].deviceId);\n    }\n  };\n\n  // Function to handle the duck number input\n  const handleDuckNumberChange = (e) => {\n    setDuckNumber(e.target.value);\n    setErrorMessage(''); // Clear the error message when the duck number changes\n    setSuccessMessage(''); // Clear success message when duck number changes\n  };\n\n  // Function to handle the upload of the photo\n  const handleUpload = async () => {\n    if (!duckNumber || !imageSrc) {\n      setErrorMessage('Número do pato ou foto ausente.');\n      return; // Prevent upload if duck number or image is missing\n    }\n\n    setUploading(true);\n    setErrorMessage(''); // Clear any previous error messages\n    setSuccessMessage(''); // Clear success message\n\n    try {\n      const formData = new FormData();\n\n      // Convert the base64 image to a file object for upload\n      const blob = await fetch(imageSrc).then((res) => res.blob());\n      formData.append('photo', new File([blob], 'duck-photo.jpg', { type: 'image/jpeg' }));\n\n      // PUT request to update only the image of the duck by custom ID\n      await axios.put(`${apiBaseUrl}/ducks/image/${duckNumber}`, formData, {\n        headers: { 'Content-Type': 'multipart/form-data' },\n      });\n\n      // Show success message and reset the form to allow another upload\n      setSuccessMessage(`Pato ${duckNumber} mudou de visual!`);\n      setImageSrc(null); // Reset the image to allow capturing/uploading another one\n      setDuckNumber(''); // Reset duck number input\n    } catch (error) {\n      if (error.response && error.response.status === 404) {\n        setErrorMessage(`Pato ${duckNumber} não encontrado!`);\n      } else if (error.response) {\n        setErrorMessage('Erro ao carregar a foto. Tente novamente.');\n      } else {\n        setErrorMessage('Erro de rede. Verifique sua conexão.');\n      }\n    } finally {\n      setUploading(false); // Stop loading after the request completes\n    }\n  };\n\n  return (\n    <Modal\n      open={open}\n      onClose={handleClose}\n      sx={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}\n    >\n      <Box\n        sx={{\n          bgcolor: \"background.paper\",\n          p: 4,\n          borderRadius: 1,\n          boxShadow: 24,\n          width: \"400px\",\n          textAlign: \"center\",\n        }}\n      >\n        {successMessage && (\n          <Alert severity=\"success\" sx={{ mt: 2, mb: 2 }}>\n            {successMessage}\n          </Alert>\n        )}\n        {!imageSrc ? (\n          <>\n            {selectedDeviceId && (\n              <Webcam\n                audio={false}\n                ref={webcamRef}\n                screenshotFormat=\"image/jpeg\"\n                width=\"100%\"\n                videoConstraints={{\n                  deviceId: selectedDeviceId, // Use the selected rear camera\n                }}\n              />\n            )}\n            <Box sx={{ display: \"flex\", justifyContent: \"center\", mt: 2 }}>\n              {devices.length > 1 && (\n                <IconButton\n                  onClick={switchCamera}\n                  sx={{\n                    backgroundColor: \"var(--secondary-color)\",\n                    \"&:hover\": {\n                      backgroundColor: \"var(--primary-color-hover)\",\n                    },\n                    color: \"white\",\n                    borderRadius: \"50%\",\n                    padding: \"16px\",\n                  }}\n                >\n                  <Cameraswitch sx={{ fontSize: 40 }} />\n                </IconButton>\n              )}\n              <IconButton\n                onClick={capturePhoto}\n                sx={{\n                  backgroundColor: \"var(--accent-color)\",\n                  \"&:hover\": {\n                    backgroundColor: \"var(--primary-color-hover)\",\n                  },\n                  color: \"white\",\n                  borderRadius: \"50%\",\n                  marginLeft: \"16px\",\n                  padding: \"16px\",\n                }}\n              >\n                <PhotoCamera sx={{ fontSize: 40 }} />\n              </IconButton>\n            </Box>\n          </>\n        ) : (\n          <>\n            <img\n              src={imageSrc}\n              alt=\"Captured Duck\"\n              style={{ width: \"100%\", borderRadius: \"8px\" }}\n            />\n            <TextField\n              label=\"Numero do Pato\"\n              type=\"number\"\n              fullWidth\n              value={duckNumber}\n              onChange={handleDuckNumberChange}\n              sx={{ mt: 2 }}\n              required\n            />\n            {errorMessage && (\n              <Alert severity=\"error\" sx={{ mt: 2, mb: 2 }}>\n                {errorMessage}\n              </Alert>\n            )}\n            <Box sx={{ display: \"flex\", justifyContent: \"center\", mt: 2 }}>\n              <IconButton\n                onClick={() => setImageSrc(null)}\n                disabled={uploading}\n                sx={{\n                  backgroundColor: \"var(--primary-color)\",\n                  \"&:hover\": {\n                    backgroundColor: \"var(--primary-color-hover)\",\n                  },\n                  color: \"white\",\n                  borderRadius: \"50%\",\n                  padding: \"16px\",\n                }}\n              >\n                <Replay sx={{ fontSize: 40 }} />\n              </IconButton>\n              <IconButton\n                onClick={handleUpload}\n                disabled={uploading}\n                sx={{\n                  backgroundColor: uploading ? \"gray\" : \"var(--success-color)\",\n                  \"&:hover\": {\n                    backgroundColor: uploading\n                      ? \"gray\"\n                      : \"var(--primary-color-hover)\",\n                  },\n                  color: \"white\",\n                  borderRadius: \"50%\",\n                  padding: \"16px\",\n                  marginLeft: \"16px\",\n                }}\n              >\n                {uploading ? (\n                  <CircularProgress size={24} />\n                ) : (\n                  <Save sx={{ fontSize: 40 }} />\n                )}\n              </IconButton>\n            </Box>\n          </>\n        )}\n      </Box>\n    </Modal>\n  );\n};\n\nexport default QuickPhotoUpload;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Modal,\n  Box,\n  Typography,\n  IconButton,\n  TextField,\n  Button,\n  FormControl,\n  ButtonBase,\n} from \"@mui/material\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport ImageLoader from \"./ImageLoader\"; // Ensure this is your existing component for images\n\nconst ClueModal = ({\n  open,\n  handleClose,\n  duck,\n  apiBaseUrl,\n  onClueSubmit,\n}) => {\n  const [formState, setFormState] = useState({ clue: \"\", answer: \"\", solved: false });\n  const [hasClues, setHasClues] = useState(false);\n  const [expandedImage, setExpandedImage] = useState(false);\n\n  useEffect(() => {\n    if (duck?.clues?.length > 0) {\n      setHasClues(true);\n      const firstClue = duck.clues[0];\n      setFormState({ clue: firstClue.clue, answer: firstClue.answer, solved: firstClue.solved || false });\n    } else {\n      setHasClues(false);\n      setFormState({ clue: \"\", answer: \"\", solved: false });\n    }\n  }, [duck]);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormState((prevState) => ({ ...prevState, [name]: value }));\n  };\n\n  const handleCheckboxChange = (e) => {\n    setFormState((prevState) => ({ ...prevState, solved: e.target.checked }));\n  };\n\n  const handleSubmit = async () => {\n    const { clue, answer, solved } = formState;\n    if (!clue || !answer) return;\n\n    try {\n      const endpoint = hasClues\n        ? `${apiBaseUrl}/clues/${duck.clues[0]._id}`\n        : `${apiBaseUrl}/ducks/${duck._id}/clues`;\n      const method = hasClues ? \"PUT\" : \"POST\";\n\n      const response = await fetch(endpoint, {\n        method,\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ clue, answer, solved }),\n      });\n\n      if (response.ok) {\n        const updatedClue = await response.json();\n        onClueSubmit(updatedClue);\n        handleClose();\n      }\n    } catch (error) {\n      console.error(\"Error handling clue:\", error);\n    }\n  };\n\n  const toggleImageExpansion = () => {\n    setExpandedImage(!expandedImage);\n  };\n\n  return (\n    <Modal\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"clue-modal-title\"\n      sx={{\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n      }}\n    >\n      <Box\n        sx={{\n          bgcolor: \"background.paper\",\n          p: 4,\n          borderRadius: 1,\n          boxShadow: 24,\n          maxWidth: \"600px\",\n          width: \"90%\",\n          textAlign: \"center\",\n          position: \"relative\",\n        }}\n      >\n        <Typography id=\"clue-modal-title\" variant=\"h6\" gutterBottom>\n          Clues for Duck #{duck?.id}\n          <IconButton\n            aria-label=\"close\"\n            onClick={handleClose}\n            sx={{ position: \"absolute\", top: 8, right: 8 }}\n          >\n            <CloseIcon />\n          </IconButton>\n        </Typography>\n        {duck?.photo && (\n          <ButtonBase mb={3} onClick={toggleImageExpansion}>\n            <Box>\n              <ImageLoader\n                src={`${apiBaseUrl}/${duck.photo.replace(/\\\\/g, \"/\")}`}\n                alt={`Duck ${duck.id}`}\n                variant=\"rectangular\"\n                width={expandedImage ? \"100%\" : \"200px\"}\n              />\n            </Box>\n          </ButtonBase>\n        )}\n        <FormControl fullWidth margin=\"normal\">\n          <TextField\n            label=\"Clue\"\n            name=\"clue\"\n            value={formState.clue}\n            onChange={handleInputChange}\n            multiline\n            rows={3}\n            required\n          />\n        </FormControl>\n        <FormControl fullWidth margin=\"normal\">\n          <TextField\n            label=\"Answer\"\n            name=\"answer\"\n            value={formState.answer}\n            onChange={handleInputChange}\n            required\n          />\n        </FormControl>\n        <FormControl fullWidth margin=\"normal\">\n          <label>\n            <input\n              type=\"checkbox\"\n              checked={formState.solved}\n              onChange={handleCheckboxChange}\n            />\n            Solved\n          </label>\n        </FormControl>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={handleSubmit}\n          disabled={!formState.clue || !formState.answer}\n          sx={{ mt: 2 }}\n        >\n          {hasClues ? \"Update Clue\" : \"Submit Clue\"}\n        </Button>\n      </Box>\n    </Modal>\n  );\n};\n\nexport default ClueModal;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  Typography,\n  Container,\n  Tabs,\n  Tab,\n  Fab,\n  Grid,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Button,\n  Drawer,\n} from \"@mui/material\";\nimport { ArrowBack, FilterList } from \"@mui/icons-material\";\nimport { useNavigate } from \"react-router-dom\";\nimport { FaPlus, FaCamera } from \"react-icons/fa\";\nimport DuckModal from \"../components/DuckModal\";\nimport HouseModal from \"../components/HouseModal\";\nimport UserModal from \"../components/UserModal\";\nimport ItemList from \"../components/ItemList\";\nimport QuickPhotoUpload from \"../components/QuickPhotoUpload\";\nimport ClueModal from \"../components/ClueModal\";\n\nconst apiBaseUrl =\n  process.env.REACT_APP_API_BASE_URL || \"https://localhost:4000\";\n\nconst fetchDucks = async (setDucks, setLoading) => {\n  try {\n    const response = await axios.get(`${apiBaseUrl}/ducks`);\n    const ducksData = response.data;\n    setDucks(ducksData);\n    return ducksData;\n  } catch (error) {\n    console.error(\"Error fetching ducks:\", error);\n    return []; // Return an empty array on error\n  } finally {\n    setLoading(false);\n  }\n};\n\nconst fetchHouses = async (setHouses, setLoading) => {\n  try {\n    const response = await axios.get(`${apiBaseUrl}/houses`);\n    const housesData = response.data;\n    setHouses(housesData);\n    return housesData; // Return the houses data\n  } catch (error) {\n    console.error(\"Error fetching houses:\", error);\n    return []; // Return an empty array on error\n  } finally {\n    setLoading(false);\n  }\n};\n\nconst fetchUsers = async (setUsers, setLoading) => {\n  try {\n    const response = await axios.get(`${apiBaseUrl}/users`);\n    const usersData = response.data;\n    setUsers(usersData);\n    return usersData; // Return the users data\n  } catch (error) {\n    console.error(\"Error fetching users:\", error);\n    return []; // Return an empty array on error\n  } finally {\n    setLoading(false);\n  }\n};\n\nconst AdminPanel = () => {\n  const [ducks, setDucks] = useState([]);\n  const [houses, setHouses] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [currentDuck, setCurrentDuck] = useState({\n    id: \"\",\n    type: \"\",\n    houseId: \"\",\n    photo: \"\",\n    userId: \"\",\n    foundDate: \"\",\n  });\n  const [currentHouse, setCurrentHouse] = useState({\n    name: \"\",\n    address: \"\",\n  });\n  const [currentUser, setCurrentUser] = useState({\n    username: \"\",\n    houseId: \"\",\n    profilePicture: \"\",\n  });\n  const [activeTab, setActiveTab] = useState(0);\n  const [isDuckEditing, setIsDuckEditing] = useState(false);\n  const [isHouseEditing, setIsHouseEditing] = useState(false);\n  const [isUserEditing, setIsUserEditing] = useState(false);\n  const [showDuckModal, setShowDuckModal] = useState(false);\n  const [showHouseModal, setShowHouseModal] = useState(false);\n  const [showUserModal, setShowUserModal] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [duckSubmitting, setDuckSubmitting] = useState(false);\n  const [houseSubmitting, setHouseSubmitting] = useState(false);\n  const [userSubmitting, setUserSubmitting] = useState(false);\n  const [filteredItems, setFilteredItems] = useState([]);\n  const [openQuickUpload, setOpenQuickUpload] = useState(false);\n\n  // New state variables for filters and filter panel visibility\n  const [selectedFilterUserId, setSelectedFilterUserId] = useState(\"\");\n  const [selectedFilterHouseId, setSelectedFilterHouseId] = useState(\"\");\n  const [selectedFilterStatus, setSelectedFilterStatus] = useState(\"all\");\n  const [selectedClueStatus, setSelectedClueStatus] = useState(\"all\");\n  const [showFilters, setShowFilters] = useState(false); // Controls the visibility of the filters panel\n\n  const [showClueModal, setShowClueModal] = useState(false);\n  const [selectedDuck, setSelectedDuck] = useState(null);\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const isAdminAuthenticated = sessionStorage.getItem(\"isAdminAuthenticated\");\n    if (!isAdminAuthenticated) {\n      navigate(\"/\");\n    }\n  }, [navigate]);\n\n  useEffect(() => {\n    const loadInitialTab = async () => {\n      fetchHouses(setHouses, setLoading);\n      fetchUsers(setUsers, setLoading);\n      const ducksData = await fetchDucks(setDucks, setLoading);\n      // No need to setFilteredItems here; it will be set by handleFilterChange\n    };\n    loadInitialTab();\n  }, []);\n\n  useEffect(() => {\n    handleFilterChange();\n  }, [\n    selectedFilterUserId,\n    selectedFilterHouseId,\n    selectedFilterStatus,\n    selectedClueStatus,\n    ducks,\n  ]);\n\n  const handleFilterChange = () => {\n    let filtered = ducks;\n\n    if (selectedFilterUserId) {\n      filtered = filtered.filter(\n        (duck) => duck.user && duck.user._id === selectedFilterUserId\n      );\n    }\n\n    if (selectedFilterHouseId) {\n      filtered = filtered.filter(\n        (duck) => duck.house && duck.house._id === selectedFilterHouseId\n      );\n    }\n\n    if (selectedFilterStatus === \"found\") {\n      filtered = filtered.filter((duck) => duck.found === true);\n    } else if (selectedFilterStatus === \"not_found\") {\n      filtered = filtered.filter((duck) => duck.found === false);\n    }\n\n    if (selectedClueStatus === \"solved\") {\n      filtered = filtered.filter(\n        (duck) => duck.clues && duck.clues.some((clue) => clue.solved)\n      );\n    } else if (selectedClueStatus === \"unsolved\") {\n      filtered = filtered.filter(\n        (duck) => duck.clues && duck.clues.some((clue) => !clue.solved)\n      );\n    }\n\n    setFilteredItems(filtered);\n  };\n\n  const handleTabChange = async (event, newValue) => {\n    setActiveTab(newValue);\n    switch (newValue) {\n      case 0:\n        await fetchDucks(setDucks, setLoading);\n        // No need to setFilteredItems; handleFilterChange will handle it\n        break;\n      case 1:\n        const usersData = await fetchUsers(setUsers, setLoading);\n        setFilteredItems(usersData);\n        break;\n      case 2:\n        const housesData = await fetchHouses(setHouses, setLoading);\n        setFilteredItems(housesData);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleDuckInputChange = (e) => {\n    const { name, value } = e.target;\n    setCurrentDuck({ ...currentDuck, [name]: value });\n  };\n\n  const handleHouseInputChange = (e) => {\n    const { name, value } = e.target;\n    setCurrentHouse({ ...currentHouse, [name]: value });\n  };\n\n  const handleUserInputChange = (e) => {\n    const { name, value } = e.target;\n    setCurrentUser({ ...currentUser, [name]: value });\n  };\n\n  const handleUserPhotoChange = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      setCurrentUser({ ...currentUser, profilePicture: file });\n    }\n  };\n\n  const handleDuckPhotoChange = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      setCurrentDuck({ ...currentDuck, photo: file });\n    }\n  };\n\n  const handleDuckSubmit = async (e) => {\n    e.preventDefault();\n    setDuckSubmitting(true);\n    try {\n      const formData = new FormData();\n      formData.append(\"id\", currentDuck.id);\n      formData.append(\"type\", currentDuck.type);\n      formData.append(\"houseId\", currentDuck.houseId);\n      formData.append(\"userId\", currentDuck.userId);\n      formData.append(\"foundDate\", currentDuck.foundDate);\n      if (currentDuck.photo instanceof File) {\n        formData.append(\"photo\", currentDuck.photo);\n      }\n\n      if (isDuckEditing) {\n        await axios.put(`${apiBaseUrl}/ducks/${currentDuck._id}`, formData, {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        });\n      } else {\n        formData.append(\"found\", false);\n        await axios.post(`${apiBaseUrl}/ducks`, formData, {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        });\n      }\n      await fetchDucks(setDucks, setLoading);\n      setShowDuckModal(false);\n    } catch (error) {\n      console.error(\"Error saving duck:\", error);\n    } finally {\n      setDuckSubmitting(false);\n    }\n  };\n\n  const handleHouseSubmit = async (e) => {\n    e.preventDefault();\n    setHouseSubmitting(true);\n    try {\n      if (isHouseEditing) {\n        await axios.put(\n          `${apiBaseUrl}/houses/${currentHouse._id}`,\n          currentHouse\n        );\n      } else {\n        await axios.post(`${apiBaseUrl}/houses`, currentHouse);\n      }\n      const updatedHouses = await fetchHouses(setHouses, setLoading);\n\n      if (activeTab === 2) {\n        setFilteredItems(updatedHouses);\n      }\n\n      setShowHouseModal(false);\n    } catch (error) {\n      console.error(\"Error saving house:\", error);\n    } finally {\n      setHouseSubmitting(false);\n    }\n  };\n\n  const handleUserSubmit = async (e) => {\n    e.preventDefault();\n    setUserSubmitting(true);\n    try {\n      const formData = new FormData();\n      formData.append(\"username\", currentUser.username);\n      formData.append(\"houseId\", currentUser.houseId);\n      if (currentUser.profilePicture instanceof File) {\n        formData.append(\"profilePicture\", currentUser.profilePicture);\n      }\n\n      if (isUserEditing) {\n        await axios.put(`${apiBaseUrl}/users/${currentUser._id}`, formData, {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        });\n      } else {\n        await axios.post(`${apiBaseUrl}/users`, formData, {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        });\n      }\n      const updatedUsers = await fetchUsers(setUsers, setLoading);\n\n      if (activeTab === 1) {\n        setFilteredItems(updatedUsers);\n      }\n\n      setShowUserModal(false);\n    } catch (error) {\n      console.error(\"Error saving user:\", error);\n    } finally {\n      setUserSubmitting(false);\n    }\n  };\n\n  const handleDuckDelete = async () => {\n    try {\n      await axios.delete(`${apiBaseUrl}/ducks/${currentDuck._id}`);\n      await fetchDucks(setDucks, setLoading);\n      setShowDuckModal(false);\n    } catch (error) {\n      console.error(\"Error deleting duck:\", error);\n    }\n  };\n\n  const handleHouseDelete = async () => {\n    try {\n      await axios.delete(`${apiBaseUrl}/houses/${currentHouse._id}`);\n      const updatedHouses = await fetchHouses(setHouses, setLoading);\n\n      if (activeTab === 2) {\n        setFilteredItems(updatedHouses);\n      }\n      setShowHouseModal(false);\n    } catch (error) {\n      console.error(\"Error deleting house:\", error);\n    }\n  };\n\n  const handleUserDelete = async () => {\n    try {\n      await axios.delete(`${apiBaseUrl}/users/${currentUser._id}`);\n      const updatedUsers = await fetchUsers(setUsers, setLoading);\n\n      if (activeTab === 1) {\n        setFilteredItems(updatedUsers);\n      }\n      setShowUserModal(false);\n    } catch (error) {\n      console.error(\"Error deleting user:\", error);\n    }\n  };\n\n  const openDuckEditModal = (duck) => {\n    setCurrentDuck({\n      _id: duck._id,\n      userId: duck.user ? duck.user._id : \"\",\n      houseId: duck.house ? duck.house._id : \"\",\n      id: duck.id,\n      type: duck.type,\n      photo: duck.photo,\n      found: duck.found,\n      foundDate: duck.foundDate,\n      clues: duck.clues,\n    });\n    setIsDuckEditing(true);\n    setShowDuckModal(true);\n  };\n\n  const handleOpenModal = (type) => {\n    if (activeTab === 0) {\n      openDuckAddModal();\n    } else if (activeTab === 1) {\n      openUserAddModal();\n    } else {\n      openHouseAddModal();\n    }\n  };\n\n  const openDuckAddModal = () => {\n    setCurrentDuck({\n      userId: \"\",\n      houseId: \"\",\n      id: \"\",\n      type: \"normal\",\n      found: false,\n    });\n    setIsDuckEditing(false);\n    setShowDuckModal(true);\n  };\n\n  const openHouseEditModal = (house) => {\n    setCurrentHouse(house);\n    setIsHouseEditing(true);\n    setShowHouseModal(true);\n  };\n\n  const openHouseAddModal = () => {\n    setCurrentHouse({ name: \"\", address: \"\" });\n    setIsHouseEditing(false);\n    setShowHouseModal(true);\n  };\n\n  const openUserAddModal = () => {\n    setCurrentUser({\n      username: \"\",\n      houseId: \"\",\n      profilePicture: \"\",\n    });\n    setIsUserEditing(false);\n    setShowUserModal(true);\n  };\n\n  const openUserEditModal = (user) => {\n    setCurrentUser({\n      _id: user._id,\n      username: user.username,\n      houseId: user.house ? user.house._id : \"\",\n      profilePicture: user.profilePicture,\n    });\n    setIsUserEditing(true);\n    setShowUserModal(true);\n  };\n\n  // Function to open the quick upload modal\n  const handleOpenQuickUpload = () => {\n    setOpenQuickUpload(true);\n  };\n\n  // Function to close the quick upload modal\n  const handleCloseQuickUpload = () => {\n    setOpenQuickUpload(false);\n  };\n\n  // Callback after successful upload to refresh the duck list\n  const handleUploadSuccess = () => {\n    // Logic to refresh your duck list here\n    setOpenQuickUpload(false);\n    // Fetch ducks again if needed\n  };\n\n  // Function to toggle the visibility of the filters panel\n  const toggleFilters = () => {\n    setShowFilters(!showFilters);\n  };\n\n  const handleOpenClueModal = (duck) => {\n    setSelectedDuck(duck);\n    setShowClueModal(true);\n  };\n\n  const handleClueSubmit = async (newClue) => {\n    if (!selectedDuck) return;\n\n    try {\n      const response = await axios.post(\n        `${apiBaseUrl}/ducks/${selectedDuck._id}/clues`,\n        newClue\n      );\n      setShowClueModal(false);\n    } catch (error) {\n      console.error(\"Error submitting clue:\", error);\n    }\n  };\n\n  return (\n    <>\n      <AppBar className=\"Appbar\" position=\"sticky\" color=\"default\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"back\"\n            onClick={() => navigate(-1)}\n          >\n            <ArrowBack />\n          </IconButton>\n          <Typography\n            component=\"div\"\n            sx={{ flexGrow: 1, alignItems: \"center\", textAlign: \"center\" }}\n          >\n            <h2 style={{ margin: 0 }}>Admin</h2>\n          </Typography>\n          {activeTab === 0 && (\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"filter\"\n              onClick={toggleFilters}\n            >\n              <FilterList />\n            </IconButton>\n          )}\n        </Toolbar>\n        <Tabs\n          value={activeTab}\n          onChange={handleTabChange}\n          aria-label=\"Admin Tabs\"\n          centered\n          indicatorColor=\"primary\"\n          sx={{\n            \"& .MuiTab-root\": {\n              color: \"var(--text-color)\", // Text color of the tab\n              fontFamily: \"var(--font-family)\", // Custom font\n              \"&.Mui-selected\": {\n                color: \"var(--primary-color)\", // Color of the selected tab\n                fontWeight: \"bold\", // Bold text for the selected tab\n              },\n            },\n            \"& .MuiTabs-indicator\": {\n              backgroundColor: \"var(--primary-color)\", // Indicator color\n              height: \"4px\",\n            },\n          }}\n        >\n          <Tab label=\"Patos\" />\n          <Tab label=\"Participantes\" />\n          <Tab label=\"Casas\" />\n        </Tabs>\n      </AppBar>\n      <Fab\n        color=\"primary\"\n        aria-label=\"add\"\n        onClick={handleOpenModal}\n        sx={{\n          position: \"fixed\",\n          bottom: 16,\n          right: 16,\n          backgroundColor: \"var(--accent-color)\", // Use the accent color for the FAB\n          \"&:hover\": {\n            backgroundColor: \"var(--primary-color-hover)\", // Hover color for the FAB\n          },\n          color: \"white\", // Text color inside the FAB\n        }}\n      >\n        <FaPlus />\n      </Fab>\n      <Fab\n        color=\"primary\"\n        aria-label=\"camera\"\n        onClick={handleOpenQuickUpload}\n        sx={{\n          position: \"fixed\",\n          bottom: 100,\n          right: 16,\n          backgroundColor: \"var(--accent-color)\", // Use the accent color for the FAB\n          \"&:hover\": {\n            backgroundColor: \"var(--primary-color-hover)\", // Hover color for the FAB\n          },\n          color: \"white\", // Text color inside the FAB\n        }}\n      >\n        <FaCamera />\n      </Fab>\n\n      {/* Modals */}\n      <DuckModal\n        open={showDuckModal}\n        handleClose={() => setShowDuckModal(false)}\n        isEditing={isDuckEditing}\n        currentDuck={currentDuck}\n        houses={houses}\n        users={users}\n        handleInputChange={handleDuckInputChange}\n        handlePhotoChange={handleDuckPhotoChange}\n        handleSubmit={handleDuckSubmit}\n        handleDelete={handleDuckDelete}\n        submitting={duckSubmitting}\n        apiBaseUrl={apiBaseUrl}\n        handleImageClick={handleOpenClueModal}\n      />\n      <HouseModal\n        open={showHouseModal} // State to control the modal visibility\n        handleClose={() => setShowHouseModal(false)} // Function to close the modal\n        isEditing={isHouseEditing} // State to track if we are editing or adding\n        currentHouse={currentHouse} // State holding the current house data\n        handleInputChange={handleHouseInputChange} // Function to handle form input changes\n        handleSubmit={handleHouseSubmit} // Function to handle form submission\n        handleDelete={handleHouseDelete} // Function to handle house deletion\n        submitting={houseSubmitting} // State to track form submission\n      />\n      <UserModal\n        open={showUserModal}\n        onClose={() => setShowUserModal(false)}\n        isEditing={isUserEditing}\n        currentUser={currentUser}\n        houses={houses}\n        onInputChange={handleUserInputChange}\n        handlePhotoChange={handleUserPhotoChange}\n        onSubmit={handleUserSubmit}\n        onDelete={handleUserDelete}\n        submitting={userSubmitting}\n        apiBaseUrl={apiBaseUrl}\n      />\n      <QuickPhotoUpload\n        open={openQuickUpload}\n        handleClose={handleCloseQuickUpload}\n        onUploadSuccess={handleUploadSuccess}\n      />\n      <ClueModal\n        open={showClueModal}\n        handleClose={() => setShowClueModal(false)}\n        duck={selectedDuck}\n        apiBaseUrl={apiBaseUrl}\n        onClueSubmit={handleClueSubmit}\n      />\n      <Container>\n        <Drawer\n          anchor=\"right\"\n          open={showFilters}\n          onClose={toggleFilters}\n          variant=\"temporary\"\n        >\n          <div style={{ width: 250, padding: 16 }}>\n            <Typography variant=\"h6\">Filters</Typography>\n            <FormControl fullWidth margin=\"normal\">\n              <InputLabel>User</InputLabel>\n              <Select\n                value={selectedFilterUserId}\n                onChange={(e) => setSelectedFilterUserId(e.target.value)}\n              >\n                <MenuItem value=\"\">\n                  <em>All</em>\n                </MenuItem>\n                {users.map((user) => (\n                  <MenuItem key={user._id} value={user._id}>\n                    {user.username}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n            <FormControl fullWidth margin=\"normal\">\n              <InputLabel>House</InputLabel>\n              <Select\n                value={selectedFilterHouseId}\n                onChange={(e) => setSelectedFilterHouseId(e.target.value)}\n              >\n                <MenuItem value=\"\">\n                  <em>All</em>\n                </MenuItem>\n                {houses.map((house) => (\n                  <MenuItem key={house._id} value={house._id}>\n                    {house.name}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n            <FormControl fullWidth margin=\"normal\">\n              <InputLabel>Status</InputLabel>\n              <Select\n                value={selectedFilterStatus}\n                onChange={(e) => setSelectedFilterStatus(e.target.value)}\n              >\n                <MenuItem value=\"all\">All</MenuItem>\n                <MenuItem value=\"found\">Found</MenuItem>\n                <MenuItem value=\"not_found\">Not Found</MenuItem>\n              </Select>\n            </FormControl>\n            <FormControl fullWidth margin=\"normal\">\n              <InputLabel>Status da Charada</InputLabel>\n              <Select\n                value={selectedClueStatus}\n                onChange={(e) => setSelectedClueStatus(e.target.value)}\n              >\n                <MenuItem value=\"all\">Todos</MenuItem>\n                <MenuItem value=\"solved\">Resolvidos</MenuItem>\n                <MenuItem value=\"unsolved\">Não Resolvidos</MenuItem>\n              </Select>\n            </FormControl>\n            <Button\n              variant=\"outlined\"\n              onClick={() => {\n                setSelectedFilterUserId(\"\");\n                setSelectedFilterHouseId(\"\");\n                setSelectedFilterStatus(\"all\");\n                setSelectedClueStatus(\"all\");\n              }}\n              fullWidth\n            >\n              Clear Filters\n            </Button>\n          </div>\n        </Drawer>\n\n        <ItemList\n          loading={loading}\n          items={filteredItems}\n          type={activeTab === 0 ? \"duck\" : activeTab === 1 ? \"user\" : \"house\"}\n          onEdit={\n            activeTab === 0\n              ? openDuckEditModal\n              : activeTab === 1\n              ? openUserEditModal\n              : openHouseEditModal\n          }\n          apiBaseUrl={apiBaseUrl}\n        />\n      </Container>\n    </>\n  );\n};\n\nexport default AdminPanel;\n"],"names":["_ref","src","alt","variant","className","width","height","loading","setLoading","useState","_jsxs","style","position","children","_jsx","Skeleton","top","left","onLoad","display","borderRadius","open","handleClose","isEditing","currentDuck","houses","users","handleInputChange","handlePhotoChange","handleSubmit","handleDelete","submitting","apiBaseUrl","handleImageClick","formattedFoundDate","foundDate","format","Date","Modal","onClose","sx","alignItems","justifyContent","marginX","overflowY","Box","bgcolor","p","boxShadow","maxWidth","maxHeight","Typography","id","component","gutterBottom","IconButton","onClick","right","CloseIcon","onSubmit","FormControl","fullWidth","margin","TextField","label","type","name","value","onChange","disabled","required","InputLabel","Select","labelId","MenuItem","houseId","map","house","_id","userId","user","username","found","InputLabelProps","shrink","Button","hidden","accept","photo","mt","textAlign","File","ImageLoader","URL","createObjectURL","replace","color","currentHouse","address","currentUser","onInputChange","onDelete","profilePicture","items","onEdit","placeholderImage","List","Array","from","_","index","ListItem","ListItemText","primary","secondary","_Fragment","ListItemSecondaryAction","item","_item$house","_item$user","cursor","onUploadSuccess","imageSrc","setImageSrc","duckNumber","setDuckNumber","webcamRef","useRef","uploading","setUploading","devices","setDevices","selectedDeviceId","setSelectedDeviceId","errorMessage","setErrorMessage","successMessage","setSuccessMessage","useEffect","async","navigator","mediaDevices","enumerateDevices","stream","getUserMedia","video","videoDevices","filter","device","kind","rearCameras","toLowerCase","includes","length","deviceId","getTracks","forEach","track","stop","error","console","getMediaDevices","Alert","severity","mb","e","target","backgroundColor","padding","Replay","fontSize","formData","FormData","blob","fetch","then","res","append","axios","put","headers","response","status","marginLeft","CircularProgress","size","Save","Webcam","audio","ref","screenshotFormat","videoConstraints","switchCamera","nextIndex","findIndex","Cameraswitch","capturePhoto","current","getScreenshot","PhotoCamera","duck","onClueSubmit","formState","setFormState","clue","answer","solved","hasClues","setHasClues","expandedImage","setExpandedImage","_duck$clues","clues","firstClue","prevState","ButtonBase","toggleImageExpansion","multiline","rows","checked","endpoint","method","body","JSON","stringify","ok","updatedClue","json","process","fetchDucks","setDucks","ducksData","get","data","fetchHouses","setHouses","housesData","fetchUsers","setUsers","usersData","AdminPanel","ducks","setCurrentDuck","setCurrentHouse","setCurrentUser","activeTab","setActiveTab","isDuckEditing","setIsDuckEditing","isHouseEditing","setIsHouseEditing","isUserEditing","setIsUserEditing","showDuckModal","setShowDuckModal","showHouseModal","setShowHouseModal","showUserModal","setShowUserModal","duckSubmitting","setDuckSubmitting","houseSubmitting","setHouseSubmitting","userSubmitting","setUserSubmitting","filteredItems","setFilteredItems","openQuickUpload","setOpenQuickUpload","selectedFilterUserId","setSelectedFilterUserId","selectedFilterHouseId","setSelectedFilterHouseId","selectedFilterStatus","setSelectedFilterStatus","selectedClueStatus","setSelectedClueStatus","showFilters","setShowFilters","showClueModal","setShowClueModal","selectedDuck","setSelectedDuck","navigate","useNavigate","sessionStorage","getItem","loadInitialTab","handleFilterChange","filtered","some","openDuckAddModal","openHouseAddModal","openUserAddModal","toggleFilters","AppBar","Toolbar","edge","ArrowBack","flexGrow","FilterList","Tabs","event","newValue","centered","indicatorColor","fontFamily","fontWeight","Tab","Fab","bottom","FaPlus","handleOpenQuickUpload","FaCamera","DuckModal","file","files","preventDefault","post","delete","HouseModal","updatedHouses","UserModal","updatedUsers","QuickPhotoUpload","handleCloseQuickUpload","handleUploadSuccess","ClueModal","newClue","Container","Drawer","anchor","ItemList"],"sourceRoot":""}
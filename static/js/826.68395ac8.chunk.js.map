{"version":3,"file":"static/js/826.68395ac8.chunk.js","mappings":"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","sources":["pages/Ranking.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./Ranking.css\"; // Custom CSS file for additional styles\nimport { FaCrown } from \"react-icons/fa\"; // Crown icon for top rank\nimport {\n  Typography,\n  AppBar,\n  Toolbar,\n  IconButton,\n  Skeleton,\n  Alert,\n  Tabs,\n  Tab, // Import Alert for error messages\n} from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ArrowBack as ArrowBackIcon } from \"@mui/icons-material\";\n\n\nconst Ranking = () => {\n  const [rankings, setRankings] = useState([]);\n  const [loading, setLoading] = useState(true); // State to track loading\n  const [rankingType, setRankingType] = useState(\"user\");\n  const [error, setError] = useState(\"\"); // State to track errors\n  const navigate = useNavigate();\n  const apiBaseUrl =\n    process.env.REACT_APP_API_BASE_URL || \"https://localhost:4000\";\n\n  useEffect(() => {\n    const fetchRankings = async () => {\n      setLoading(true);\n      setError(\"\"); // Clear any previous errors\n      try {\n        const response = await axios.get(\n          `${apiBaseUrl}/rankings?by=${rankingType}`\n        );\n        setRankings(response.data);\n      } catch (error) {\n        console.error(\"Error fetching rankings:\", error);\n        setError(\n          \"Não foi possível carregar os rankings. Por favor, entre em contato com o administrador.\"\n        );\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchRankings();\n  }, [rankingType, apiBaseUrl]);\n\n  const handleRankingTypeChange = (event, newRankingType) => {\n    if (newRankingType !== null) {\n      setRankingType(newRankingType);\n    }\n  };\n\n  return (\n    <>\n      <AppBar className=\"Appbar\" position=\"sticky\" color=\"default\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"back\"\n            onClick={() => navigate(-1)}\n          >\n            <ArrowBackIcon />\n          </IconButton>\n\n          <Typography\n            component=\"div\"\n            sx={{ flexGrow: 1, alignItems: \"center\", textAlign: \"center\" }}\n          >\n            <h2 style={{ margin: 0 }}>Ranking</h2>\n          </Typography>\n        </Toolbar>\n        <Tabs\n          value={rankingType}\n          onChange={handleRankingTypeChange}\n          aria-label=\"Ranking Tabs\"\n          centered\n          sx={{\n            \"& .MuiTab-root\": {\n              color: \"var(--text-color)\", // Text color of the tab\n              fontFamily: \"var(--font-family)\", // Custom font\n              \"&.Mui-selected\": {\n                color: \"var(--primary-color)\", // Color of the selected tab\n                fontWeight: \"bold\", // Bold text for the selected tab\n              },\n            },\n            \"& .MuiTabs-indicator\": {\n              backgroundColor: \"var(--primary-color)\", // Indicator color\n              height: \"4px\",\n            },\n          }}\n        >\n          <Tab label=\"Participante\" value=\"user\" />\n          <Tab label=\"Casa\" value=\"house\" />\n        </Tabs>\n      </AppBar>\n\n      <div className=\"container py-4\">\n        {error ? (\n          <Alert severity=\"error\">{error}</Alert>\n        ) : (\n          <div className=\"list-group mt-3\">\n            {loading\n              ? Array.from(new Array(5)).map((_, index) => (\n                  <div\n                    key={index}\n                    className=\"list-group-item d-flex justify-content-between align-items-center\"\n                  >\n                    <div className=\"d-flex\">\n                      <Skeleton variant=\"text\" width=\"150px\" height={30} />\n                    </div>\n                    <Skeleton variant=\"text\" width=\"15%\" height={20} />\n                  </div>\n                ))\n              : rankings.map((ranking, index) => (\n                  <div\n                    key={index}\n                    className={`list-group-item list-group-item-action d-flex justify-content-between align-items-center ${\n                      index === 0 ? \"top-rank\" : \"\"\n                    }`}\n                  >\n                    <div className=\"d-flex align-items-center\">\n                      {index === 0 && (\n                        <FaCrown className=\"crown-icon text-warning\" />\n                      )}\n                      <h5 className=\"mb-0 ml-2\">{ranking.entity}</h5>\n                    </div>\n                    <span className=\"badge badge-primary badge-pill\">\n                      {ranking.points} pontos\n                    </span>\n                  </div>\n                ))}\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Ranking;\n"],"names":["Ranking","rankings","setRankings","useState","loading","setLoading","rankingType","setRankingType","error","setError","navigate","useNavigate","apiBaseUrl","process","useEffect","async","response","axios","get","data","console","fetchRankings","_jsxs","_Fragment","children","AppBar","className","position","color","Toolbar","_jsx","IconButton","edge","onClick","ArrowBackIcon","Typography","component","sx","flexGrow","alignItems","textAlign","style","margin","Tabs","value","onChange","handleRankingTypeChange","event","newRankingType","centered","fontFamily","fontWeight","backgroundColor","height","Tab","label","Alert","severity","Array","from","map","_","index","Skeleton","variant","width","ranking","FaCrown","entity","points"],"sourceRoot":""}
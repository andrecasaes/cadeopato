{"version":3,"file":"static/js/179.bebe66aa.chunk.js","mappings":"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","sources":["components/ImageLoader.js","components/DuckModal.js","components/HouseModal.js","components/UserModal.js","components/ItemList.js","pages/AdminPanel.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Skeleton from '@mui/material/Skeleton';\n\nconst ImageLoader = ({ src, alt,variant, className, width, height }) => {\n  const [loading, setLoading] = useState(true);\n\n  return (\n    <div className=\"image-container\" style={{ position: 'relative', width, height }}>\n      {loading && (\n        <Skeleton\n          variant={variant}\n          width={width}\n          height={height}\n          style={{ position: 'absolute', top: 0, left: 0 }}\n        />\n      )}\n      <img\n        src={src}\n        alt={alt}\n        className={className}\n        onLoad={() => setLoading(false)}\n        style={{ display: loading ? 'none' : 'block', borderRadius: variant === 'circular' ? '50%' : '', width, height }}\n      />\n    </div>\n  );\n};\n\nexport default ImageLoader;\n","import React from \"react\";\nimport {\n  Modal,\n  Box,\n  Typography,\n  IconButton,\n  FormControl,\n  TextField,\n  InputLabel,\n  Select,\n  MenuItem,\n  Button,\n} from \"@mui/material\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport ImageLoader from \"./ImageLoader\";\n\nconst DuckModal = ({\n  open,\n  handleClose,\n  isEditing,\n  currentDuck,\n  houses,\n  users,\n  handleInputChange,\n  handlePhotoChange,\n  handleSubmit,\n  handleDelete,\n  submitting,\n  apiBaseUrl,\n}) => {\n  return (\n    <Modal\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"modal-title\"\n      aria-describedby=\"modal-description\"\n      sx={{\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        marginX: 6,\n        overflowY: \"auto\",\n      }}\n    >\n      <Box\n        sx={{\n          bgcolor: \"background.paper\",\n          p: 4,\n          borderRadius: 1,\n          boxShadow: 24,\n          maxWidth: \"90vw\",\n          maxHeight: \"90vh\",\n          overflowY: \"auto\",\n          position: \"relative\",\n        }}\n      >\n        <Typography\n          id=\"modal-title\"\n          variant=\"h6\"\n          component=\"h2\"\n          gutterBottom\n        >\n          {isEditing ? \"Edit Duck\" : \"Add New Duck\"}\n          <IconButton\n            aria-label=\"close\"\n            onClick={handleClose}\n            sx={{ position: \"absolute\", right: 8, top: 8 }}\n          >\n            <CloseIcon />\n          </IconButton>\n        </Typography>\n        <Box component=\"form\" onSubmit={handleSubmit}>\n          <FormControl fullWidth margin=\"normal\">\n            <TextField\n              label=\"Numero\"\n              type=\"number\"\n              id=\"duckNumber\"\n              name=\"id\"\n              value={currentDuck.id}\n              onChange={handleInputChange}\n              disabled={isEditing}\n              required\n            />\n          </FormControl>\n          <FormControl fullWidth margin=\"normal\">\n            <InputLabel id=\"duckType-label\">Tipo</InputLabel>\n            <Select\n              labelId=\"duckType-label\"\n              id=\"duckType\"\n              name=\"type\"\n              value={currentDuck.type}\n              onChange={handleInputChange}\n              required\n            >\n              <MenuItem value=\"normal\">Normal</MenuItem>\n              <MenuItem value=\"oclinhos\">Oclinhos</MenuItem>\n            </Select>\n          </FormControl>\n          <FormControl fullWidth margin=\"normal\">\n            <InputLabel id=\"duckHouse-label\">Casa</InputLabel>\n            <Select\n              labelId=\"duckHouse-label\"\n              id=\"duckHouse\"\n              name=\"houseId\"\n              value={currentDuck.houseId}\n              onChange={handleInputChange}\n              required\n            >\n              {houses.map((house) => (\n                <MenuItem key={house._id} value={house._id}>\n                  {house.name}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n          <FormControl fullWidth margin=\"normal\">\n            <InputLabel id=\"duckUser-label\">User</InputLabel>\n            <Select\n              labelId=\"duckUser-label\"\n              id=\"duckUser\"\n              name=\"userId\"\n              value={currentDuck.userId}\n              onChange={handleInputChange}\n              required\n            >\n              {users.map((user) => (\n                <MenuItem key={user._id} value={user._id}>\n                  {user.username}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n          <FormControl fullWidth margin=\"normal\">\n            <Button variant=\"contained\" component=\"label\">\n              Upload Photo\n              <input\n                type=\"file\"\n                hidden\n                id=\"duckPhoto\"\n                name=\"photo\"\n                accept=\"image/*\"\n                onChange={handlePhotoChange}\n              />\n            </Button>\n            {currentDuck.photo && (\n              <Box mt={2} sx={{ textAlign: \"center\" }}>\n                {currentDuck.photo instanceof File ? (\n                  <ImageLoader\n                    src={URL.createObjectURL(currentDuck.photo)}\n                    alt=\"Duck Preview\"\n                    variant=\"retangular\"\n                    className=\"duck-image-preview\"\n                    height=\"200px\"\n                  />\n                ) : (\n                  <ImageLoader\n                    src={`${apiBaseUrl}/${currentDuck.photo.replace(/\\\\/g, \"/\")}`}\n                    variant=\"retangular\"\n                    alt=\"Duck Preview\"\n                    className=\"duck-image-preview\"\n                    height=\"200px\"\n                  />\n                )}\n              </Box>\n            )}\n          </FormControl>\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"success\"\n            fullWidth\n            sx={{ mt: 3 }}\n            disabled={submitting}\n          >\n            {submitting\n              ? \"Saving...\"\n              : isEditing\n              ? \"Update Duck\"\n              : \"Add Duck\"}\n          </Button>\n\n          {isEditing && (\n            <Button\n              variant=\"contained\"\n              color=\"error\"\n              fullWidth\n              sx={{ mt: 2 }}\n              onClick={handleDelete}\n            >\n              Delete Duck\n            </Button>\n          )}\n        </Box>\n      </Box>\n    </Modal>\n  );\n};\n\nexport default DuckModal;\n","import React from \"react\";\nimport {\n  Modal,\n  Box,\n  Typography,\n  IconButton,\n  FormControl,\n  TextField,\n  Button,\n} from \"@mui/material\";\nimport CloseIcon from \"@mui/icons-material/Close\";\n\nconst HouseModal = ({\n  open,\n  handleClose,\n  isEditing,\n  currentHouse,\n  handleInputChange,\n  handleSubmit,\n  handleDelete,\n  submitting,\n}) => {\n  return (\n    <Modal\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"modal-title\"\n      aria-describedby=\"modal-description\"\n      sx={{\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        marginX: 6,\n        overflowY: \"auto\",\n      }}\n    >\n      <Box\n        sx={{\n          bgcolor: \"background.paper\",\n          p: 4,\n          borderRadius: 1,\n          boxShadow: 24,\n          maxWidth: \"90vw\",\n          maxHeight: \"90vh\",\n          overflowY: \"auto\",\n          position: \"relative\",\n        }}\n      >\n        <Typography\n          id=\"modal-title\"\n          variant=\"h6\"\n          component=\"h2\"\n          gutterBottom\n        >\n          {isEditing ? \"Edit House\" : \"Add New House\"}\n          <IconButton\n            aria-label=\"close\"\n            onClick={handleClose}\n            sx={{ position: \"absolute\", right: 8, top: 8 }}\n          >\n            <CloseIcon />\n          </IconButton>\n        </Typography>\n        <Box component=\"form\" onSubmit={handleSubmit}>\n          <FormControl fullWidth margin=\"normal\">\n            <TextField\n              label=\"Name\"\n              type=\"text\"\n              id=\"houseName\"\n              name=\"name\"\n              value={currentHouse.name}\n              onChange={handleInputChange}\n              required\n            />\n          </FormControl>\n          <FormControl fullWidth margin=\"normal\">\n            <TextField\n              label=\"Address\"\n              type=\"text\"\n              id=\"houseAddress\"\n              name=\"address\"\n              value={currentHouse.address}\n              onChange={handleInputChange}\n            />\n          </FormControl>\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"success\"\n            fullWidth\n            sx={{ mt: 3 }}\n            disabled={submitting}\n          >\n            {submitting\n              ? \"Saving...\"\n              : isEditing\n              ? \"Update House\"\n              : \"Add House\"}\n          </Button>\n\n          {isEditing && (\n            <Button\n              variant=\"contained\"\n              color=\"error\"\n              fullWidth\n              sx={{ mt: 2 }}\n              onClick={handleDelete}\n            >\n              Delete House\n            </Button>\n          )}\n        </Box>\n      </Box>\n    </Modal>\n  );\n};\n\nexport default HouseModal;\n","import React from \"react\";\nimport {\n  Modal,\n  Box,\n  Typography,\n  IconButton,\n  FormControl,\n  TextField,\n  Button,\n  Select,\n  MenuItem,\n  InputLabel,\n} from \"@mui/material\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport ImageLoader from \"./ImageLoader\";\n\nconst UserModal = ({\n  open,\n  onClose,\n  isEditing,\n  currentUser,\n  houses,\n  onInputChange,\n  handlePhotoChange,\n  onSubmit,\n  onDelete,\n  submitting,\n  apiBaseUrl\n}) => {\n  return (\n    <Modal\n      open={open}\n      onClose={onClose}\n      aria-labelledby=\"modal-title\"\n      aria-describedby=\"modal-description\"\n      sx={{\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        marginX: 6,\n        overflowY: \"auto\",\n      }}\n    >\n      <Box\n        sx={{\n          bgcolor: \"background.paper\",\n          p: 4,\n          borderRadius: 1,\n          boxShadow: 24,\n          maxWidth: \"90vw\",\n          maxHeight: \"90vh\",\n          overflowY: \"auto\",\n          position: \"relative\",\n        }}\n      >\n        <Typography\n          id=\"modal-title\"\n          variant=\"h6\"\n          component=\"h2\"\n          gutterBottom\n        >\n          {isEditing ? \"Edit User\" : \"Add New User\"}\n          <IconButton\n            aria-label=\"close\"\n            onClick={onClose}\n            sx={{ position: \"absolute\", right: 8, top: 8 }}\n          >\n            <CloseIcon />\n          </IconButton>\n        </Typography>\n        <Box component=\"form\" onSubmit={onSubmit}>\n          <FormControl fullWidth margin=\"normal\">\n            <TextField\n              label=\"Username\"\n              id=\"username\"\n              name=\"username\"\n              value={currentUser.username}\n              onChange={onInputChange}\n              required\n            />\n          </FormControl>\n          <FormControl fullWidth margin=\"normal\">\n            <InputLabel id=\"house-label\">House</InputLabel>\n            <Select\n              labelId=\"house-label\"\n              id=\"houseId\"\n              name=\"houseId\"\n              value={currentUser.houseId}\n              onChange={onInputChange}\n              required\n            >\n              {houses.map((house) => (\n                <MenuItem key={house._id} value={house._id}>\n                  {house.name}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n          <FormControl fullWidth margin=\"normal\">\n            <Button variant=\"contained\" component=\"label\">\n              Upload Profile Picture\n              <input\n                type=\"file\"\n                hidden\n                id=\"profilePicture\"\n                name=\"profilePicture\"\n                accept=\"image/*\"\n                onChange={handlePhotoChange}\n              />\n            </Button>\n            {currentUser.profilePicture && (\n              <Box mt={2} sx={{ textAlign: \"center\" }}>\n                {currentUser.profilePicture instanceof File ? (\n                  <ImageLoader\n                    src={URL.createObjectURL(currentUser.profilePicture)}\n                    alt=\"Duck Preview\"\n                    variant=\"retangular\"\n                    className=\"duck-image-preview\"\n                    height=\"200px\"\n                  />\n                ) : (\n                  <ImageLoader\n                    src={`${apiBaseUrl}/${currentUser.profilePicture.replace(/\\\\/g, \"/\")}`}\n                    variant=\"retangular\"\n                    alt=\"Duck Preview\"\n                    className=\"duck-image-preview\"\n                    height=\"200px\"\n                  />\n                )}\n              </Box>\n            )}\n          </FormControl>\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"success\"\n            fullWidth\n            sx={{ mt: 3 }}\n            disabled={submitting}\n          >\n            {submitting\n              ? \"Saving...\"\n              : isEditing\n              ? \"Update User\"\n              : \"Add User\"}\n          </Button>\n\n          {isEditing && (\n            <Button\n              variant=\"contained\"\n              color=\"error\"\n              fullWidth\n              sx={{ mt: 2 }}\n              onClick={onDelete}\n            >\n              Delete User\n            </Button>\n          )}\n        </Box>\n      </Box>\n    </Modal>\n  );\n};\n\nexport default UserModal;\n","import React from \"react\";\nimport {\n  List,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  Typography,\n  Skeleton,\n} from \"@mui/material\";\nimport ImageLoader from \"./ImageLoader\";\n\nconst ItemList = ({\n  loading,\n  items,\n  type,\n  onEdit,\n  apiBaseUrl,\n  placeholderImage = \"https://via.placeholder.com/40\",\n}) => {\n  return (\n    <List sx={{ mt: 4 }}>\n      {loading\n        ? Array.from(new Array(5)).map((_, index) => (\n            <ListItem key={index} className={`${type}-list-item`}>\n              <ListItemText\n                primary={<Skeleton variant=\"text\" width=\"40%\" height={30} />}\n                secondary={\n                  <>\n                    <Skeleton variant=\"text\" width=\"60%\" height={20} />\n                  </>\n                }\n              />\n              <ListItemSecondaryAction>\n                <Skeleton variant=\"circular\" width={40} height={40} />\n              </ListItemSecondaryAction>\n            </ListItem>\n          ))\n        : items.map((item) => (\n            <ListItem\n              key={item._id}\n              className={`duck-list-item`}\n              sx={{ cursor: \"pointer\" }}\n              onClick={() => onEdit(item)}\n            >\n              <ListItemText\n                primary={\n                  <Typography variant=\"h5\">\n                    {type === \"duck\"\n                      ? `Pato ${item.id}`\n                      : item.username || item.name}\n                  </Typography>\n                }\n                secondary={\n                  type === \"duck\" ? (\n                    <>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        Casa: {item.house?.name}\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        Participante: {item.user?.username}\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        Tipo: {item.type}\n                      </Typography>\n                      <Typography\n                        variant=\"body2\"\n                        color={item.found ? \"success.main\" : \"error.main\"}\n                      >\n                        {item.found ? \"Encontrado\" : \"Escondido\"}\n                      </Typography>\n                    </>\n                  ) : null\n                }\n              />\n              {type === \"duck\" || type === \"user\" ? (\n                <ListItemSecondaryAction>\n                  <ImageLoader\n                    src={\n                      type === \"duck\"\n                        ? item.photo\n                          ? `${apiBaseUrl}/${item.photo.replace(/\\\\/g, \"/\")}`\n                          : placeholderImage\n                        : type === \"user\"\n                        ? item.profilePicture\n                          ? `${apiBaseUrl}/${item.profilePicture.replace(\n                              /\\\\/g,\n                              \"/\"\n                            )}`\n                          : placeholderImage\n                        : null\n                    }\n                    alt={\n                      type === \"duck\"\n                        ? `Duck ${item.id}`\n                        : item.username || item.name\n                    }\n                    variant=\"circular\"\n                    className={`${type}-image`}\n                    width={40}\n                    height={40}\n                  />\n                </ListItemSecondaryAction>\n              ) : null}\n            </ListItem>\n          ))}\n    </List>\n  );\n};\n\nexport default ItemList;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  Typography,\n  Container,\n  Tabs,\n  Tab,\n  Fab,\n} from \"@mui/material\";\nimport {\n  ArrowBack\n} from \"@mui/icons-material\";\nimport { useNavigate } from \"react-router-dom\";\nimport { FaPlus } from \"react-icons/fa\";\nimport DuckModal from \"../components/DuckModal\";\nimport HouseModal from \"../components/HouseModal\";\nimport UserModal from \"../components/UserModal\";\nimport ItemList from \"../components/ItemList\";\n\nconst apiBaseUrl =\n  process.env.REACT_APP_API_BASE_URL || \"https://localhost:4000\";\n\nconst fetchDucks = async (setDucks, setFilteredDucks, setLoading) => {\n  try {\n    const response = await axios.get(`${apiBaseUrl}/ducks`);\n    const ducksData = response.data;\n    setDucks(ducksData);\n    const sortedDucks = ducksData.sort((a, b) => a.id - b.id);\n    setFilteredDucks(sortedDucks);\n    return sortedDucks; // Return the sorted ducks\n  } catch (error) {\n    console.error(\"Error fetching ducks:\", error);\n    return []; // Return an empty array on error\n  } finally {\n    setLoading(false);\n  }\n};\n\nconst fetchHouses = async (setHouses, setLoading) => {\n  try {\n    const response = await axios.get(`${apiBaseUrl}/houses`);\n    const housesData = response.data;\n    setHouses(housesData);\n    return housesData; // Return the houses data\n  } catch (error) {\n    console.error(\"Error fetching houses:\", error);\n    return []; // Return an empty array on error\n  } finally {\n    setLoading(false);\n  }\n};\n\nconst fetchUsers = async (setUsers, setLoading) => {\n  try {\n    const response = await axios.get(`${apiBaseUrl}/users`);\n    const usersData = response.data;\n    setUsers(usersData);\n    return usersData; // Return the users data\n  } catch (error) {\n    console.error(\"Error fetching users:\", error);\n    return []; // Return an empty array on error\n  } finally {\n    setLoading(false);\n  }\n};\n\nconst AdminPanel = () => {\n  const [ducks, setDucks] = useState([]);\n  const [houses, setHouses] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [filteredDucks, setFilteredDucks] = useState([]);\n  const [currentDuck, setCurrentDuck] = useState({\n    id: \"\",\n    type: \"\",\n    houseId: \"\",\n    photo: \"\",\n    userId: \"\",\n  });\n  const [currentHouse, setCurrentHouse] = useState({\n    name: \"\",\n    address: \"\",\n  });\n  const [currentUser, setCurrentUser] = useState({\n    username: \"\",\n    houseId: \"\",\n    profilePicture: \"\",\n  });\n  const [activeTab, setActiveTab] = useState(0);\n  const [selectedHouse, setSelectedHouse] = useState(\"\");\n  const [selectedUser, setSelectedUser] = useState(\"\");\n  const [isDuckEditing, setIsDuckEditing] = useState(false);\n  const [isHouseEditing, setIsHouseEditing] = useState(false);\n  const [isUserEditing, setIsUserEditing] = useState(false);\n  const [showDuckModal, setShowDuckModal] = useState(false);\n  const [showHouseModal, setShowHouseModal] = useState(false);\n  const [showUserModal, setShowUserModal] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [duckSubmitting, setDuckSubmitting] = useState(false);\n  const [houseSubmitting, setHouseSubmitting] = useState(false);\n  const [userSubmitting, setUserSubmitting] = useState(false);\n  const [filteredItems, setFilteredItems] = useState([]);\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const isAdminAuthenticated = sessionStorage.getItem(\"isAdminAuthenticated\");\n    if (!isAdminAuthenticated) {\n      navigate(\"/\");\n    }\n  }, [navigate]);\n\n  useEffect(() => {\n    const loadInitialTab = async () => {\n      fetchHouses(setHouses, setLoading);\n      fetchUsers(setUsers, setLoading);\n      const ducksData = await fetchDucks(\n        setDucks,\n        setFilteredDucks,\n        setLoading\n      );\n      setFilteredItems(ducksData);\n    };\n    loadInitialTab();\n  }, []);\n\n  const handleTabChange = async (event, newValue) => {\n    setActiveTab(newValue);\n    switch (newValue) {\n      case 0:\n        const ducksData = await fetchDucks(\n          setDucks,\n          setFilteredDucks,\n          setLoading\n        );\n        setFilteredItems(ducksData);\n        break;\n      case 1:\n        const usersData = await fetchUsers(setUsers, setLoading);\n        setFilteredItems(usersData);\n        break;\n      case 2:\n        const housesData = await fetchHouses(setHouses, setLoading);\n        setFilteredItems(housesData);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleDuckInputChange = (e) => {\n    const { name, value } = e.target;\n    setCurrentDuck({ ...currentDuck, [name]: value });\n  };\n\n  const handleHouseInputChange = (e) => {\n    const { name, value } = e.target;\n    setCurrentHouse({ ...currentHouse, [name]: value });\n  };\n\n  const handleUserInputChange = (e) => {\n    const { name, value } = e.target;\n    setCurrentUser({ ...currentUser, [name]: value });\n  };\n\n  const handleUserPhotoChange = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      setCurrentUser({ ...currentUser, profilePicture: file });\n    }\n  };\n\n  const handleDuckPhotoChange = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      setCurrentDuck({ ...currentDuck, photo: file });\n    }\n  };\n\n  const handleDuckSubmit = async (e) => {\n    e.preventDefault();\n    setDuckSubmitting(true);\n    try {\n      const formData = new FormData();\n      formData.append(\"id\", currentDuck.id);\n      formData.append(\"type\", currentDuck.type);\n      formData.append(\"houseId\", currentDuck.houseId);\n      formData.append(\"userId\", currentDuck.userId);\n      if (currentDuck.photo instanceof File) {\n        formData.append(\"photo\", currentDuck.photo);\n      }\n\n      if (isDuckEditing) {\n        await axios.put(`${apiBaseUrl}/ducks/${currentDuck._id}`, formData, {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        });\n      } else {\n        formData.append(\"found\", false);\n        await axios.post(`${apiBaseUrl}/ducks`, formData, {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        });\n      }\n      const updatedDucks = await fetchDucks(\n        setDucks,\n        setFilteredDucks,\n        setLoading\n      );\n\n      if (activeTab === 0) {\n        setFilteredItems(updatedDucks);\n      }\n\n      setShowDuckModal(false);\n    } catch (error) {\n      console.error(\"Error saving duck:\", error);\n    } finally {\n      setDuckSubmitting(false);\n    }\n  };\n\n  const handleHouseSubmit = async (e) => {\n    e.preventDefault();\n    setHouseSubmitting(true);\n    try {\n      if (isHouseEditing) {\n        await axios.put(\n          `${apiBaseUrl}/houses/${currentHouse._id}`,\n          currentHouse\n        );\n      } else {\n        await axios.post(`${apiBaseUrl}/houses`, currentHouse);\n      }\n      const updatedHouses = await fetchHouses(setHouses, setLoading);\n\n      if (activeTab === 2) {\n        setFilteredItems(updatedHouses);\n      }\n\n      setShowHouseModal(false);\n    } catch (error) {\n      console.error(\"Error saving house:\", error);\n    } finally {\n      setHouseSubmitting(false);\n    }\n  };\n\n  const handleUserSubmit = async (e) => {\n    e.preventDefault();\n    setUserSubmitting(true);\n    try {\n      const formData = new FormData();\n      formData.append(\"username\", currentUser.username);\n      formData.append(\"houseId\", currentUser.houseId);\n      if (currentUser.profilePicture instanceof File) {\n        formData.append(\"profilePicture\", currentUser.profilePicture);\n      }\n\n      if (isUserEditing) {\n        await axios.put(`${apiBaseUrl}/users/${currentUser._id}`, formData, {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        });\n      } else {\n        await axios.post(`${apiBaseUrl}/users`, formData, {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        });\n      }\n      const updatedUsers = await fetchUsers(setUsers, setLoading);\n\n      if (activeTab === 1) {\n        setFilteredItems(updatedUsers);\n      }\n\n      setShowUserModal(false);\n    } catch (error) {\n      console.error(\"Error saving user:\", error);\n    } finally {\n      setUserSubmitting(false);\n    }\n  };\n\n  const handleDuckDelete = async () => {\n    try {\n      await axios.delete(`${apiBaseUrl}/ducks/${currentDuck._id}`);\n      const updatedDucks = await fetchDucks(\n        setDucks,\n        setFilteredDucks,\n        setLoading\n      );\n\n      if (activeTab === 0) {\n        setFilteredItems(updatedDucks);\n      }\n      setShowDuckModal(false);\n    } catch (error) {\n      console.error(\"Error deleting duck:\", error);\n    }\n  };\n\n  const handleHouseDelete = async () => {\n    try {\n      await axios.delete(`${apiBaseUrl}/houses/${currentHouse._id}`);\n      const updatedHouses = await fetchHouses(setHouses, setLoading);\n\n      if (activeTab === 2) {\n        setFilteredItems(updatedHouses);\n      }\n      setShowHouseModal(false);\n    } catch (error) {\n      console.error(\"Error deleting house:\", error);\n    }\n  };\n\n  const handleUserDelete = async () => {\n    try {\n      await axios.delete(`${apiBaseUrl}/users/${currentUser._id}`);\n      const updatedUsers = await fetchUsers(setUsers, setLoading);\n\n      if (activeTab === 1) {\n        setFilteredItems(updatedUsers);\n      }\n      setShowUserModal(false);\n    } catch (error) {\n      console.error(\"Error deleting user:\", error);\n    }\n  };\n\n  const openDuckEditModal = (duck) => {\n    setCurrentDuck({\n      _id: duck._id,\n      userId: duck.user ? duck.user._id : \"\",\n      houseId: duck.house ? duck.house._id : \"\",\n      id: duck.id,\n      type: duck.type,\n      photo: duck.photo,\n      found: duck.found,\n    });\n    setIsDuckEditing(true);\n    setShowDuckModal(true);\n  };\n\n  const handleOpenModal = (type) => {\n    if (activeTab === 0) {\n      openDuckAddModal();\n    } else if (activeTab === 1) {\n      openUserAddModal();\n    } else {\n      openHouseAddModal();\n    }\n  };\n\n  const openDuckAddModal = () => {\n    setCurrentDuck({\n      userId: selectedHouse || \"\",\n      houseId: selectedUser || \"\",\n      id: \"\",\n      type: \"normal\",\n      found: false,\n    });\n    setIsDuckEditing(false);\n    setShowDuckModal(true);\n  };\n\n  const openHouseEditModal = (house) => {\n    setCurrentHouse(house);\n    setIsHouseEditing(true);\n    setShowHouseModal(true);\n  };\n\n  const openHouseAddModal = () => {\n    setCurrentHouse({ name: \"\", address: \"\" });\n    setIsHouseEditing(false);\n    setShowHouseModal(true);\n  };\n\n  const openUserAddModal = () => {\n    setCurrentUser({\n      username: \"\",\n      houseId: \"\",\n      profilePicture: \"\",\n    });\n    setIsUserEditing(false);\n    setShowUserModal(true);\n  };\n\n  const openUserEditModal = (user) => {\n    setCurrentUser({\n      _id: user._id,\n      username: user.username,\n      houseId: user.house ? user.house._id : \"\",\n      profilePicture: user.profilePicture,\n    });\n    setIsUserEditing(true);\n    setShowUserModal(true);\n  };\n\n  const handleUserFilter = (event, newUserId) => {\n    setSelectedUser(newUserId);\n\n    if (newUserId) {\n      setFilteredDucks(\n        ducks\n          .filter((duck) => duck.user._id === newUserId)\n          .sort((a, b) => a.id - b.id)\n      );\n    } else {\n      setFilteredDucks(ducks.sort((a, b) => a.id - b.id));\n    }\n  };\n\n  return (\n    <>\n      <AppBar className=\"Appbar\" position=\"sticky\" color=\"default\">\n        <Toolbar>\n        <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"back\"\n            onClick={() => navigate(-1)}\n          >\n            <ArrowBack />\n          </IconButton>\n          <Typography\n            component=\"div\"\n            sx={{ flexGrow: 1, alignItems: \"center\", textAlign: \"center\" }}\n          >\n            <h2 style={{ margin: 0 }}>Admin</h2>\n          </Typography>\n        </Toolbar>\n        <Tabs\n          value={activeTab}\n          onChange={handleTabChange}\n          aria-label=\"Admin Tabs\"\n          centered\n          indicatorColor=\"primary\"\n          sx={{\n            \"& .MuiTab-root\": {\n              color: \"var(--text-color)\", // Text color of the tab\n              fontFamily: \"var(--font-family)\", // Custom font\n              \"&.Mui-selected\": {\n                color: \"var(--primary-color)\", // Color of the selected tab\n                fontWeight: \"bold\", // Bold text for the selected tab\n              },\n            },\n            \"& .MuiTabs-indicator\": {\n              backgroundColor: \"var(--primary-color)\", // Indicator color\n              height: \"4px\",\n            },\n          }}\n        >\n          <Tab label=\"Patos\" />\n          <Tab label=\"Participantes\" />\n          <Tab label=\"Casas\" />\n        </Tabs>\n      </AppBar>\n      <Fab\n        color=\"primary\"\n        aria-label=\"add\"\n        onClick={handleOpenModal}\n        sx={{\n          position: \"fixed\",\n          bottom: 16,\n          right: 16,\n          backgroundColor: \"var(--accent-color)\", // Use the accent color for the FAB\n          \"&:hover\": {\n            backgroundColor: \"var(--primary-color-hover)\", // Hover color for the FAB\n          },\n          color: \"white\", // Text color inside the FAB\n        }}\n      >\n        <FaPlus />\n      </Fab>\n\n      <Container>\n        <DuckModal\n          open={showDuckModal}\n          handleClose={() => setShowDuckModal(false)}\n          isEditing={isDuckEditing}\n          currentDuck={currentDuck}\n          houses={houses}\n          users={users}\n          handleInputChange={handleDuckInputChange}\n          handlePhotoChange={handleDuckPhotoChange}\n          handleSubmit={handleDuckSubmit}\n          handleDelete={handleDuckDelete}\n          submitting={duckSubmitting}\n          apiBaseUrl={apiBaseUrl}\n        />\n        <HouseModal\n          open={showHouseModal} // State to control the modal visibility\n          handleClose={() => setShowHouseModal(false)} // Function to close the modal\n          isEditing={isHouseEditing} // State to track if we are editing or adding\n          currentHouse={currentHouse} // State holding the current house data\n          handleInputChange={handleHouseInputChange} // Function to handle form input changes\n          handleSubmit={handleHouseSubmit} // Function to handle form submission\n          handleDelete={handleHouseDelete} // Function to handle house deletion\n          submitting={houseSubmitting} // State to track form submission\n        />\n        <UserModal\n          open={showUserModal}\n          onClose={() => setShowUserModal(false)}\n          isEditing={isUserEditing}\n          currentUser={currentUser}\n          houses={houses}\n          onInputChange={handleUserInputChange}\n          handlePhotoChange={handleUserPhotoChange}\n          onSubmit={handleUserSubmit}\n          onDelete={handleUserDelete}\n          submitting={userSubmitting}\n          apiBaseUrl={apiBaseUrl}\n        />\n\n        <ItemList\n          loading={loading}\n          items={filteredItems}\n          type={activeTab === 0 ? \"duck\" : activeTab === 1 ? \"user\" : \"house\"}\n          onEdit={\n            activeTab === 0\n              ? openDuckEditModal\n              : activeTab === 1\n              ? openUserEditModal\n              : openHouseEditModal\n          }\n          apiBaseUrl={apiBaseUrl}\n        />\n      </Container>\n    </>\n  );\n};\n\nexport default AdminPanel;\n"],"names":["_ref","src","alt","variant","className","width","height","loading","setLoading","useState","_jsxs","style","position","children","_jsx","Skeleton","top","left","onLoad","display","borderRadius","open","handleClose","isEditing","currentDuck","houses","users","handleInputChange","handlePhotoChange","handleSubmit","handleDelete","submitting","apiBaseUrl","Modal","onClose","sx","alignItems","justifyContent","marginX","overflowY","Box","bgcolor","p","boxShadow","maxWidth","maxHeight","Typography","id","component","gutterBottom","IconButton","onClick","right","CloseIcon","onSubmit","FormControl","fullWidth","margin","TextField","label","type","name","value","onChange","disabled","required","InputLabel","Select","labelId","MenuItem","houseId","map","house","_id","userId","user","username","Button","hidden","accept","photo","mt","textAlign","File","ImageLoader","URL","createObjectURL","replace","color","currentHouse","address","currentUser","onInputChange","onDelete","profilePicture","items","onEdit","placeholderImage","List","Array","from","_","index","ListItem","ListItemText","primary","secondary","_Fragment","ListItemSecondaryAction","item","_item$house","_item$user","cursor","found","process","fetchDucks","async","setDucks","setFilteredDucks","ducksData","axios","get","data","sortedDucks","sort","a","b","error","console","fetchHouses","setHouses","housesData","fetchUsers","setUsers","usersData","AdminPanel","ducks","filteredDucks","setCurrentDuck","setCurrentHouse","setCurrentUser","activeTab","setActiveTab","selectedHouse","setSelectedHouse","selectedUser","setSelectedUser","isDuckEditing","setIsDuckEditing","isHouseEditing","setIsHouseEditing","isUserEditing","setIsUserEditing","showDuckModal","setShowDuckModal","showHouseModal","setShowHouseModal","showUserModal","setShowUserModal","duckSubmitting","setDuckSubmitting","houseSubmitting","setHouseSubmitting","userSubmitting","setUserSubmitting","filteredItems","setFilteredItems","navigate","useNavigate","useEffect","sessionStorage","getItem","loadInitialTab","openDuckAddModal","openHouseAddModal","openUserAddModal","AppBar","Toolbar","edge","ArrowBack","flexGrow","Tabs","event","newValue","centered","indicatorColor","fontFamily","fontWeight","backgroundColor","Tab","Fab","bottom","FaPlus","Container","DuckModal","e","target","file","files","preventDefault","formData","FormData","append","put","headers","post","updatedDucks","delete","HouseModal","updatedHouses","UserModal","updatedUsers","ItemList","duck"],"sourceRoot":""}